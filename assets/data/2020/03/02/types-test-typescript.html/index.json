{"hash":"851239bb1f00eea1f4c99cb70bb72945510a8a44","data":{"blogPost":{"id":"ba7d185dfc8ec33db59565dd51bbf939","title":"How I learned to stop worrying and love the types & tests","description":"On TypeScript, ESlint, jest, TSDoc, Travis-CI, and VSCode (with inspirations from the Zen of Python).","path":"/blog/2020/03/types-test-typescript/","content":"<p><em>On TypeScript, ESlint, jest, TSDoc, Travis-CI, and VSCode (with inspirations from the Zen of Python)</em></p>\n<p>It is fun to write fast without constraints, and run code in a flash. That is why I fell in love with Python and the Jupyter Notebook environment, a great tool for prototyping and interacting with data. However, interactive notebooks fall short when you want to write bigger, maintainable code. See the <a href=\"http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What’s wrong with computational notebooks?</a> survey:</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1019 404' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-dfcfd0f278efd47b01035456853c51e8'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-dfcfd0f278efd47b01035456853c51e8)' width='1019' height='404' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAIAAAAOir%2b2AAAACXBIWXMAAAsSAAALEgHS3X78AAAJgElEQVRYw6VY6VLj6BXt182PvEJS8wCpyv8klZnMdNPd0OzQ7EtjwIDByNr3xfuCF62WJX3KkWXcDE1NoPLVLZdsVNY9955zzzXvHFV1RLFL3bMH%2b/K301bppnZ9pRbOtULBvLioXl0p307188KQ47oVCjf0GQb3J5NJ%2bvaTpASvtajzzaca6UM97XedZqjpY8N4IXR9bJoBRfmFgn9xkcXVlXt4GDWb%2bJJOs16t13Hxrn972ysUWqenytaWtLl59/HD7cL78qfPV//55W5hgVn%2bUnr/G/V5ETcYe7ulhff1o6P%2b5WU8HmcZEfL67Mk0ezNq/TbaW3G/6aQppg2tK/llymNoj/4hKhWP552zM/vzZ3t52f7yZfThw5imk%2bmjFUmq0EwGYHB/3ysW%2b9dX3YsL4/CQXl6ml7%2bw6%2bvs2iqzusJvbtAry8z6evvivH5ywm2sNQtn/Zub/Fvemv0wcXa966sJzyeWQdpq2jb6ms/yviT64g8hST7DeGdn3uGhd3DgHR9HlkWiKP/CWtVSNX0K4O6ue37eA1sOD/iNjcri59uPH28%2bvKeXl3BNLS2VP32kvyy1z75pO19LC781Tk4eisXXd4BkN5EE9EnTh3i06p5dhiwbGxZp62nbfBGAIGQhih7our7urK2h/GOKmj1x%2btCaZYqSjKt3IPSwUrEZulMqde/uxP09anPzfmND2NultjaZnZ3K5gazvf1QLjevrtiv27jNYdnXa%2bAZxEPvFhQqR0qVdLW0Y/b1gOMDWQqkJ6EoeXgU5e7uultbwBCK4tOStZsNRdPx7t38GZ12i%2bV46v5e1w1D13RN000L1zzPq6o2mUwGg4HA874fvIk8IYkaUQ8B7Y4S9z5UDoJb8EdLmmraMvqqX6F9nvO5x2BZr1TKApLd3/eLRf/6GgoO5h2YnrplCKKcUSh/P5mEURRnNO33bm/vGJoWJYVhWU1VWYbRVC2aTPr9Pk3TOQDyOvJkagvr/xpt/jz6%2bo/hxrpX0JF02lZJQ00aStrUMwDMdwA8j6o7q6vOyoq7sxMKwo9Ezd%2bBQhwvZBTKU7EMvVKplO8pRVHp6aHuKVlGl3QWMDR0IEQHRFEIgrd14MJnvrrFfa%2b0592c%2bZV62pOSmpBUddLS0rY%2b1D3uiQYgXI5zj45Q%2b6jRIHGcOE4yGhFI7hFGnnCjanKClM4BNBt1JIpiG4aJ7CVRBB68t6zqFIAOCo1GowpV8YPgjfNzduI09snYT8ZrTmHNK2ikKadNbaC6VAVi/V1wnHd/b6%2bs2IuLGKAQwMSy5sXPH20aGstNOzCzGJLUatVqrSaAWbKEPnBchgcy4DgOSogm0XAwBLWCNw5QzB%2bkPneAJft4zS3IpGakWQcMdIBlfVGYTR4EZCYI7smJu72dKXh/P/H9p0SaUcjUeVH5TqGRnVW3Vqtl6RoGTTMsw8qSpBumIPC6rkdR1Ot1AWn8OgC5APqx/ck%2b%2bmgfLmRxgAsm1lF7aGAuYo%2bis6Sn8s00UC47m5sof1AuTwuQPP/mKYBmzRIkJaNQFEfVqoWZytE0qKIga0mEdhmGEwURYFiOBQBQyLZtRVY8z389hbA7uCSjXCceLNrHK843xM1EsNKOQZqZDwx1l%2bUy6ufjHxc07W5uYnR6p6ezx7wkYnA%2b8wEy7QCK2u20OZZr1BvValVRFTULjecFkEcURUM3Mw0Mh%2bjGeBy%2b1YDFsLroHL%2b39z7Zh5/towO/ZJGOnuQAjO8A8kA3GMY9OMAUAoa4232GYUahWtUwrZkGMGFkyFbC1FEgAI7PDqpOURXMIW7aAYzRAcZopfLHY5TMrJI8NeBePLKitpv4d2Ppn8ONDfccPqAkDVBIs3UHo/mJCfiy7BaLzsYGAiIGnaJW63camL5WTUNStISQHMCkUa9DAHd3txzHg0OAYui6JAqGaQqiaBpWJmJ0gOdf1ECeK4I8d97HHW7SosbKsVeGgvkYpeuYSdtMe9bQdOHEigzfRepgkXd97cB6IYP19aBYxPzBGH1BxJYpyerMyPJyguIgVjZ/%2bAzD3e3dbakE/mRTVZInYfjQ6%2bHa85%2bP0Xm9Mz%2bZtC99thSIN4GAKAUC3rIT/Srk1/3zneDqYsKqaVMkVbhBto0%2byN7tXbbzlEp%2bpRI9PISKgl0JFjZmmHxzflFwMC4wPCGPYxTZo8CO42ChgHbhXFglKhQlyQrD0MrUiXvdLsMwwe81kOftJH55LHGhvu1egiS/jL7%2bPNpG/Hu09etoB%2bsn/KuW9qppFzaskPqjE7f0geZilaDpSaMRDwbpjxMHfX0JwEOvKynydwAQaC07dTnjT/aSeTXLqjooJEDRoJlj2xB6EIyfLWqNuHfi3/862sWYh0ZXnNPlx/jinIDxVyFHRSqsV8XkIa1ZJK1smRvoLsOi9iTfDgl5Hj/SdfqhY4/kfBtNkgTlH49R2RDXno/FhINYDcPAYgeeCVNB52M0W%2baerBJ5%2bbnQ2HNvkCj4veqc5bNyHoDx63D3bFypofykZZL2LDINdK1BNoUCjiOv3lCeA4jj2DJNSeAxcFRZoio0RqihYX/TUW%2bsEtk2qmkhOuBkAJ45cY4BCwIS/WDvf8zc6nss2PvAsOVdliaimXbAfm0eBK8tHVOIYdCBGX9esyM%2bAgBVvm%2bj008JlicMUhAdEoCdoQ/gUg4g7wD/ZJ3GnuyTMMhiPIrdDeccGYNC81i0jxZG%2b6fje2wNUlIVk6r2I4UeNJdmAo59KwDXtpFbMl8lPM/VVMU0LYZmMfgVDKPMjBnIlxd4s2qFk3F/0MfncwoV/MqH0f6SfbI4zRWVXs3DxuvZPJbt06XRMVYgBB9hgIJIbWPKIiPt1EdWUGHyfYE8npelPFUzeQTgOSNZUWc%2bMLN9nDiJsMFOTzw9uCAvOXm%2bJkxIFJPpvxpIios4TaI0xis%2bn0dE4vn95In6c9/AEpn%2bf%2bfd/1wEYKILowMsApVATYJoEk8ADL4WTrJ5ilUnYzNpDogTeAE%2b9D2fJGTea8/zoCdEp9OBCeKvOIHvz9GE9brHsAEsbDAY2rbrTu/wA/I4heDEmTGvr8MufFA5HGNmuq6Lm/DlfwQgL095LP%2b5/fc/tf%2b25Vw0tZpm6JiyoFarnTl8j4wuCYeo4TeurOKvGF9hGM4B4GdQsVi8vLzElpJRNPvJYVjVKqqQPwVpDXZ37ePjBrYYEduWqGc/ak20PwcAU%2bv%2b9FPvL38d7u7IllmvVhmGxeqDH1tVy/ovL3kwHYvdW24AAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1019\" data-srcset=\"/assets/static/notebooks-chart.82a2fbd.00e4a36fa00b7df65601cf0bdf7324d0.png 480w, /assets/static/notebooks-chart.ba8ab28.00e4a36fa00b7df65601cf0bdf7324d0.png 1019w\" data-sizes=\"(max-width: 1019px) 100vw, 1019px\" data-src=\"/assets/static/notebooks-chart.ba8ab28.00e4a36fa00b7df65601cf0bdf7324d0.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/notebooks-chart.ba8ab28.00e4a36fa00b7df65601cf0bdf7324d0.png\" width=\"1019\"></noscript>\n<p>Restructuring and cleaning up code (refactoring) is being listed as one task notebooks are not meant for. For further reading on the pros and cons of notebooks, see <a href=\"https://yihui.org/en/2018/09/notebook-war/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The First Notebook War</a>.</p>\n<p>While I knew the concept of tests, I got discouraged by some overzealous test-driven development practices which make feature development slow and experimentation — even slower. In data science, you pretty much need to take an iterative approach to data. Creating meticulous tests before exploring the data is a big mistake, and will result in a well-crafted garbage-in, garbage-out pipeline. We need an environment flexible enough to encourage experiments, especially in the initial place.</p>\n<p>Moreover: writing clever code is tempting! Why should you deny yourself the fun of solving a seemingly difficult problem in a one-liner? Well, there is a word of caution, and it’s called <a href=\"https://github.com/dwmkerr/hacker-laws#kernighans-law\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the Kernighan’s Law</a>:</p>\n<blockquote>\n<p>Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.</p>\n</blockquote>\n<p>In other words: being smart won’t make you automatically a good software engineer. The combination of high intelligence and no software engineering skills often results in code-golf-style contraptions that do the job but are completely incomprehensible for anyone else (including their authors’ future selves). This may explain the baseline <a href=\"https://academia.stackexchange.com/questions/23237/why-are-papers-without-code-but-with-results-accepted/23238#23238\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">code quality in academia</a>.</p>\n<hr>\n<p>Last autumn, I got invited to the Centre for Quantum Technologies at the National University of Singapore to lead the creation of <a href=\"https://github.com/Quantum-Game/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quantum Game with Photons 2</a>. It is a bigger project, with a few people on board (with various skillsets), so things that would work for solo coding won’t fly there. And I learned a lot, by trial and error.</p>\n<p>I got quite a few insights from things most software engineers take for granted: <strong>types</strong> and <strong>tests</strong>. If you are a fellow (ex-)scientist, have ADHD (I do) or for any other reason find yourself too impatient, or smart, to set types and write tests: this post is for you!</p>\n<p>In this post I will discuss:</p>\n<ul>\n<li>TypeScript as an improvement over JavaScript</li>\n<li>Code documentation with TSDocs</li>\n<li>ESLint as a “spell checker” and automatic style guide for code</li>\n<li>Tests (with jest framework)</li>\n<li>Continuous integration with Travis CI and Codecov</li>\n</ul>\n<h1 id=\"typescript\"><a href=\"#typescript\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>TypeScript</h1>\n<p>Since it is a browser-based game, JavaScript was an obvious choice. We chose <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeScript</a> (<em>“JavaScript with types”</em>) as its dialect, and never looked back. We all used <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VSCode</a> open-source editor, due to its TypeScript support and rich plugin ecosystem</p>\n<p><a href=\"https://twitter.com/pmigdal/status/1179329959598313473\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 588 230' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-aed9b83fdbfb1be2ac03f6fd1b2b7f61'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-aed9b83fdbfb1be2ac03f6fd1b2b7f61)' width='588' height='230' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAIAAAAOir%2b2AAAACXBIWXMAAAsSAAALEgHS3X78AAAFgklEQVRYw9VXSY8bRRT2ASSOSEgc%2bQEgpHAm4kD%2bQiSQEAfmOkQc2CQOHBBCQmJNIAgJMRMiBCE5hCCwZ/O%2bL%2b19d9tur%2b1uu9vdXrrbK1%2b7J8bYY5ghKDNT8vRUv3r1%2bntV772vSjedNVlRQpFILkdOZm16fpoOf6IobH/5yQvPPfvUk0%2b88frmdDLpdLoURSmK0u12JUmq1eutFjcejztdtQ0Gg1PHPRyNZFk5dOCrTz%2b%2be/WjrOH2y5eef0Sn09%2b7WyhS2zd%2b%2bO77rZ9%2bvhUMha59ff3mzR%2b/uHoNnevffMuyLGad1kZpX5VkhW21Dx3YeOWlz9%2b94rlz4/Kli48/9uiVzU11WzpdjuPFTqffl7AVHM8HAsEWx7UF4UzFmOrAm2%2b9/c6rl9sB04sXntbpdFtbWwDoJqIpksoUyplCKVdUn5lipS/JZwe6toyqAy2O/%2byD97c/fO/ihWde29iYINjHk15P4oWOrAwAutHkur1%2bp9sbn7381mn/JEmOxuJkPq9iX1%2bI5vLJSlsnn49qluc64xWFxc7JHBjP2iKCpaTRRpdxTAFiPFcbzdpfVWI4nNucLlhYNL66WKpjC2CO60CxSPE8H4vFUHByZE4UxUQyVSqVciSZzeU6nU42m0unM/1%2bH50GwyRTKZIky5VKNBoDdZBkvt1ux%2bKJUDiCdC8Ui5hlMpmJYFAQxXy%2bQIRC8UQSyrCfyWSxz6l0ulAo%2bHx%2bdLLZLKYIggB5OpOx2uxenx92TuAAsFIl6g%2b9ATMBolar%2b/1%2bIhhyutx6w06z2fT5A%2bFIlGHZA6OJphv4sNvj8apPbzgc2T8wxgEwlfpdr4fzLrdnd38fw1abjW7QGMIsQNfrDXi63GgeWIMRu8MBB3Z292Cs2WwZdnbhM8wGgkGs2jFjSTcPgKWNQwwshoS24xBqyuCyeSxhE7B%2beJVlWRvSmA7KmoIWTupzNMJTGx3ct8/zbQ3ueKQaHAwHJ84BpG8imexLEgKp2%2bsBULlcxitN05AwDIMoAbjVJP6/y%2bLkP1ahSrVqtloRQkaj6Zfbd8wWq8VqNZpMDqcL4fHrvd8ODoxIgHXfeEBnHnAhDkOoVqthmbHeOPn0ej3sKaIZ%2b14qlxEeSKkTVYZT4IEj8Z2LY6nuvMBdB0%2b3yqCz8jJdIsglul0K/SXeVS2syJdqwGpnXtbWMf0CvMnfHEDBQZRr1U0bQ83R9FDr5sqogEvJMFMYSmtOeKiS8y%2bhj4vEvL%2bOdPGKlFuS4NwPZWHhFDy6fxk4dABlx2y22OwOsCy41mazW602EBkICIQFxgErhSMRl8ttMltUDvIHGIaNRKIqPRl29vb2cfsplys2ux2sHInGdvf2m61WkaIsqp1gLB53OJ0OhzORSGIWqMrr9YHv2GYT5Q4FA7clSLw%2bHzCAwgEac1Hb/f5AgAiC6YAE3/GBX/0Bp8qFHpwMNPdUB/L5fCwW9xMEjgAw6vF6I9EoPgnckOMVRAFywPxsjgyFw0ajWRBEcDD68AewGJZBB5igk8lm7Q4n1oKiShaLbUasKqmDkgkiCNb3BwiTxQJXUfQABmcKrC46cCw4s4i9Ai/Bc%2bgECALWYAQrC7bH6sAUlKCAe9WhA1pDpdeI9p/bbPvk1XO5hKg7XhmYk/FiRC3GzJLkuFXoyAPzMS53R0r%2bJRcXh6Zr0n1dOyKJWa7NcjzNtkiqwgtivlTFD%2bnLtvhaA4Nik2vLilKlGapaL1TqTJODgQirFIRhiJXRoXujND9w1qUQq9R7owyvUOIQv8nD4QFctYROF9cuwG3y7VyxUijXcNgC9FKVBl6mhctZt0qzcLLR4vCGWRl%2b4GvIXlq2VaWSOCTbA1ddctakvDAMs7Kp0of8oRLZOW1/An5l17iXZw2gAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"588\" data-srcset=\"/assets/static/pmigdal-tweet-typescript.7a439e5.10e6fc07c6724fc16f822c6bf765a56b.png 588w\" data-sizes=\"(max-width: 588px) 100vw, 588px\" data-src=\"/assets/static/pmigdal-tweet-typescript.7a439e5.10e6fc07c6724fc16f822c6bf765a56b.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/pmigdal-tweet-typescript.7a439e5.10e6fc07c6724fc16f822c6bf765a56b.png\" width=\"588\"></noscript></a></p>\n<p>In principle, types are not necessary. All in all, everything in the computer is a long sequence of zeros and ones. But almost always we want to <strong>restrict</strong> what we can do with a particular variable to things that make sense, in the given context. There are exotic cases when we want to treat 0s and 1s of a <strong>float</strong> using operations for an <strong>integer</strong>, vide <a href=\"https://en.wikipedia.org/wiki/Fast_inverse_square_root\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fast inverse square root</a>. But there are rare exceptions that do deserve a few extra lines of switching between types.</p>\n<p>In Python, when trying to do a dubious operation, you get an error pretty soon. In JavaScript… an undefined can fly through a few layers of abstraction, causing an error in a seemingly unrelated piece of code. We can get funny results due to using different types. Open a console, write:</p>\n<p><code>function add(a, b) { return +(a + b) }</code></p>\n<p>And then try to <code>add(2,2)</code> and <code>add('2', 2)</code>. In both cases, you get a number… but, is it the same one? Sure, this case is trivial. But what if this function were much more complicated, had a few arguments (in non-obvious order), and its input arguments came from different functions (from modules or packages you don't maintain)?</p>\n<p>Even in Python, the error happens in the runtime. Why not see it coming while writing code? In TypeScript, with a few keystrokes, we can set:</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 685 129' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ee12271f8ac7ced28889b418540383f1'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ee12271f8ac7ced28889b418540383f1)' width='685' height='129' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAMCAIAAABdkSyeAAAACXBIWXMAAAsSAAALEgHS3X78AAADqUlEQVRIx8VWa3PiNhTldwRk2ZYly%2b8H5hm8gCEhhGASutCGzm52O5np9P//gR5ZhabbaWf6Id07GnG49%2bi%2bZF9oGdS0uGeatmVzk3G1W4xSKoTjScaYSalJLZPatukK6jDKLEII49I0L3puMGY7FrOoocgW5Y4pHMpsCmgT4z2lRS1HDtZisGK9indLMdrQeDQaJqfnu6c6Wa7nQdKzi0TWN8Hzg7db%2beWA23ZR1XGcWL3Mq1fBT1u3XnWnwTi3Ld8Xy4l/qv2PGz4v/ZgOk3a7jYa8XwGNcCYzL/W4H4pIMuG4nnClFCzMu5btGAahpmkgC1OJZVk4qZJSHf9Db5nEtgx0W2lwOSplbMRhxjvfADWJQROZLbpVmU7n6ayQSdAvk24/8GQ8rhxXdjrtywE8Px3SOUPSbORiMgyi0Rv%2bnwcJ%2bcfHifzlCPnGdDn7d1qLOSRLyNVVp0066NpV%2b6qjMmyEENok1PTd1MfQftu20VtoAMyzwN2ZRnX7dSzN1PvZCb3UovX4bG6V6lhwqytvSCBYTSBLX796J8/RAVoOCoiRrMosz4v5vPpQTmezOdZ0OkuzfDQaTyZlt1uU5QesMIzyvAvNeHzt%2b8FgMIQJmuXyJssyAOjH4zGY4FTVAn6ghrJQ0oP%2b%2bnqi9cD9/jBNM3zVHESEN4SAabFY3t6u4KTX67uuzJTksPb7Ax3U83xVAIpsnx%2bQXtG7v98cDsf9fr/bPeJ8lnVn83lfyeBwOGy32yiKORfwC3eMOQCoENb9/gekggxWqzsUAyd1vXt42KzX97BCPxyOqqqCEtbj8UcEAhMmVIUC4Pbubo0QKMNxOEzw8PS0BxnTArnCOfJGLOzgoCrfbwpA3jazcD%2bcO0EYc9cDW7gBF1Jh6au3WXphGGJH6ug6ggFjAaM32LEQFSfxVQgXO5yArBeYQnnxtAdgkDXQSgDwNdAONQdLm6DRTGAQtH8o8dRgjFKZcsqol/JkMEvWv6a3X5LZIVq8pJvf0pvP8aDKs%2bzTp8/bbX08Hp%2bfT4%2bPTy8vX%2bq6Bjidfn59ff369Rf0DB7RLb1Q5AVfNP%2bifGv9hqZNzdJYKxVWBeAGglBmqZ8mIsl6ST5U7U6SooikH8kglp6qPgjQ%2bAj3iKtA7cBBABhGjeATBN2k/3GpH9MW3ufdfvHxcbau3MVkuiyngrtRkSynGOuYTMQ4zy81QNVkIm9H21sxvoeoG0BSGJ74IxAJNxIC4wmpmvT7JPRf5XeNbGzBvNF9OwAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"685\" data-srcset=\"/assets/static/typescript_add.813ab45.7a76eedee9ad4d5036e945c80897ae1a.png 685w\" data-sizes=\"(max-width: 685px) 100vw, 685px\" data-src=\"/assets/static/typescript_add.813ab45.7a76eedee9ad4d5036e945c80897ae1a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/typescript_add.813ab45.7a76eedee9ad4d5036e945c80897ae1a.png\" width=\"685\"></noscript>\n<p>I found that the overhead to use types in TypeScript is minimal (if any). When writing a new class, method or function, very often it is faster. Sure, I need to specify types of input and output. But then I get speedup due to autocompletion, hints, and linting if for any reason I make a mistake.</p>\n<p>Types give built-in testing — that a given function takes arguments of particular types. However, they also help greatly with the code readability. When seeing <code>changeVolume(volume: number)</code> you don’t need to guess if <code>id</code> is a number, string, boolean, <code>Volume</code> object, or Cthulhu-knows-what.</p>\n<p>So, let’s start with a few lines of <a href=\"https://www.python.org/dev/peps/pep-0020/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Zen of Python</a>:</p>\n<blockquote>\n<p>Explicit is better than implicit.</p>\n<p>In the face of ambiguity, refuse the temptation to guess.</p>\n</blockquote>\n<hr>\n<p>To be fair: there is quite a lot missing in TypeScript types. For example, integer types would help a lot in typical tasks such as accessing an array or iterating a loop; even if they are stored as floats, I want to make sure someone won’t take the 2.5-th element of a list.</p>\n<p>Still, for me, TS is a day and night difference with JavaScript.</p>\n<h3 id=\"further-reading\"><a href=\"#further-reading\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Further reading</h3>\n<ul>\n<li><a href=\"https://blog.logrocket.com/is-typescript-worth-it/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Is TypeScript worth it? - LogRocket Blog</a></li>\n</ul>\n<h1 id=\"tsdoc\"><a href=\"#tsdoc\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>TSDoc</h1>\n<p>Good comments do clarify code. <a href=\"https://github.com/microsoft/tsdoc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TSDoc</a> is a way of writing TypeScript comments where they’re linked to a particular function, class or method (like <a href=\"https://www.python.org/dev/peps/pep-0257/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Python docstrings</a>).</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 530 245' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-4ebd5b25d13331cb3cfaf643afed895c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-4ebd5b25d13331cb3cfaf643afed895c)' width='530' height='245' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAeCAIAAAATj48OAAAACXBIWXMAAAsSAAALEgHS3X78AAAJf0lEQVRYw9VY%2b3PbxhH2H5HEFgnwgMPdAbjDG3w/xDdFUqIkypZEJXFsx1GczOTVdNqm05/7f/c7kJSUZup6pk4zxmDAw94CvN399ts9PDLNCg6zUvx8gMcjx3eCph82Pcsm5gdoxSPuU2KT7epNQ1uAq2lU7gbF1dSzdwpmxSibOLW8vNXZqf0BBljEFgGzrApXjsNtiHDrCBuYcjzKXEqZRQW1qUW5zTxKKhUM3JAx33EEZdJhPtRsCPGGyv89iI9sm2KhhFSChpd0JLGspCuDqrAdK2zLqOnn/SCfRH7o8JDX57HDLS/Rg%2bo4Svsq7iroxF2Z9KQImTaAVHYJRe4T694usk253eChcK9pPpQT8t8M0L61SXFo98MAYjPTMPAoZnAHYJDti0xz%2b3bo4woIFU/pt1iOBSEkeilkpwBdy7a0in6lVXlgw1bhV0snW30Cx%2b1N3Ftuvi2uj2yL%2bimjQqTrv8fzF6q/Ub0zvzlzhAWnVqchApL0VXUYAD%2by6mVDFSJWh9KiVtDys77C6sOGDGuCuk4%2bjurzUCYcGMsGQXKobKsStvx8FFXHqjqNky7C5cc9mQ5UNlBe4DieUx0FSU/hEcQQUa3PYmDSy9x8FDZPknygAOP/HAFKjVK5QqiozWw3sXhIHN9iElYD1tSxHKQBAOXq%2bMA9lOuU8CIOBUwRS4cCOWNRHSagEZoYQ1Ngca4Gp04VzxHKQcJAU%2beMR7miTpFg0MQY/4XBNlZcOggF/gXZyAMHt9B/SwRsVfOAbBHRuOXGHVdWucyYavhezFTucl%2bvI%2brIpO3J3A2qLnDFA0wJBFdL6oLYFl6iqgJCxAfMpimrIKgCG5qgjC1lFWN9uyUxrXdHdOYWLdDcCo2ycUd3b4uARrlF3Ij6ke1nLKgyIS1VZX7CVc64RyyHiIiHDdeLuZ8KmxJQkMwEACyrrp9yPA5T4VrAQOaCwu%2bal80d85p3hFuYYRQQJ%2b9AMeTdWAjIQ7axZEhlRpzA5pHtxrZIUB3cIPfjHBwJbCAUwAYw4CIdIlBtAS1hw0MwDIEGHhArpxCCfwEDTcSepi/m2QgLZrdXTdPvk0YFsZjInv4jXb2Jj77w6tPk%2bI0aXrthOn/58%2bzFd3GzK2Ka9oO052uQNL3qJKyOwxpSvKezOR8FUVfFbT85DBrLKGp6yGBXOSJiyHLQMTgAT6XDMOtLZDaIASTxXtoXDSHbAdNZwASx7aKumkbpiVmgz6KFt3TsNWlukbrlxLsKrZOP7Cu3WblDeeWueO%2bxVOB7K3mvhcxLmM15fPaXcLQJp5%2br7qnqP5O9c7d2hNCjutUXMdwPl4PRUK2TUeBKXb9lIixmRS0JN5MttZMH52%2bY/lfy92WATuIyyhb1GkfAqVWg1ZGphRgz3eFRZheo1dgFPUMCzIA9kTaYQliKKfsPa%2bYQAVBhwYkHuimrFK2ZUS6YwthVcvPX596f28Js3gsrRWnehoLszp0uee%2b%2b3zdzlgW2tTgBMkulcqlslErGk4PyQQmncXAAWfkJbsplPYtpZEYZ00%2bMcmm7kcChH8NRhn65vAU7FEsls1TcQYYT5RI5UDHeswFpoqIkSOOgWYuzLIwCL8nCdjPJq0k1D7q9apqGrWbaqMWtZhJnMuZhFDf8vO6Gse6fNIvRKI08jzNf1Kp5yALwgp1FTh7TOHCqqRMrO1ROFkE74Qn5X2j/twZ02vn6YjqfteaT1sV6cnkxOLsYL2ety6fz1Unv5cvTi9Pxs4vBfNabT7uXN5Pj2mSyej15/afWYu1w0Wy1ueCjk%2blw2o5a2dliOgy7DAWh11BXJ/L8iI86cjVW62N/PaWeN/aH942ncReNHXltQahnyuWHZj3Q3LWrWlIMHlHHsVHFPN9VUld9XbQRcJAjtwhYD40SyNSm1DJNAjcrIaSH4sSNorxjljGq/7VAjY3WTKe%2bboaAJyyHqxith7FvJ1xPFdsfvVLm%2bqZGnqH3U%2bixUI9IBTCtYIsi1dYMrB5/RLm7a0rBIMzBmHIUL/C7iV4I6l5v82Z2/eXxD/88%2bfrP/auvOmc3vfNPpy%2b%2bb682tVqy3ixuX602V9MXX55%2b8/rp%2btn4p59vbl%2bd3GyO1k9nZ%2bfjzcXs%2bfP56cVRPDyLFreydRKOrjlazLOb/qffLd/8srj9sb%2b5HVzdHq4/G2y%2bmTz/pnu8nn7xfev4GaeEJ51wfKPGn8nOQmbt5mJz/PqnyctfVt/%2bbfD51%2b3ZxeHT55OX3/WvbgcXLycvvp188UNr9akbJkg%2bTaPwBmXcceA7KaSEccxTuDouOgGBLhNB8n0ufcGpyWyTWobv2hKNp13mDnE97uqnLcYEYcogTsViZcIQRE8GjusjCCII4UXmSiYEEz4VnAmwMloYm9vk4PFjeL1iUY0U8DJHGDn3Qz9O9eOuYr7iMnRcyWXA/YB7isnIER4CCANQfYkT1t3aGKeojnnUgEH58Hhw/dXw%2bsuw1eOMu4IF3WXv8hV8Vpsuq9Oz%2bvyiNjpLBwvh8d6gvV4PT9eD5bS5PGpMF73FuJZ2xqMZUxTbnAr2RSIbe62F2zxyVCbCpLm8bi%2beHl7etld44Wk2XNYn88byrDY5a8zP4%2bHpydiIG020maA7YNrQ9Kavxn5s7nKA6taXhnVeHzvpIUsPbZmYNs0Gs9p40V5eZv2B4Fz5HksanWev6pNjVW9no%2bO4O84GK1nrSo%2b1OulsWusP8n43G/Tr9UYynzYavUF3YKcS4QyV8tFn87Tr1kY8rONN%2bWBZG510L/DCRTZYpr2j2mhem53mw1V1OA3a8%2bMx2vs2Nntv32cXBlQqiqGhlDUvDiiPRRhyH/mCDRgNGrYIkdKey7NEprGXKJ7GvsQOIRCNqoxC18saPKjLxiDs9JFOH3/8EZpSP6kJFftpDTlnbGuDAUfiPMAVtQaVpHzwuPTJR6Unj3EWt09Kjx%2bX92NNC%2b/STqNDRj/WTXrL1vEsH152zkf5aJj0Le57zVkwvPGaCz9ttlrp6fn4ZHU4HjY3N8vVSf/q8mg8ajy7OmosL6tHl5PnX49f/TjfvFCeCFrDkzd/7ayu89GxCDNNJmTfCRW1mezr9N3g4ZiQd9jM3xngUhfNpLH/GIS%2b1NiW0nsexoYdyWYXa9A7/bs9%2bJZJLew7sfOtmJhDLhc7JAOsULS4zu/UQdwbMPAPJfXKxerNf/uq8aB07OT7DxMPtcx7oflgvG%2bjf%2b9mDpUfG60P%2bNso%2bqwPd/U4/gWUwEeDYODUMQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"530\" data-srcset=\"/assets/static/tsdoc1.b15dca4.6a8e659557c34f78356172baa082d971.png 530w\" data-sizes=\"(max-width: 530px) 100vw, 530px\" data-src=\"/assets/static/tsdoc1.b15dca4.6a8e659557c34f78356172baa082d971.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/tsdoc1.b15dca4.6a8e659557c34f78356172baa082d971.png\" width=\"530\"></noscript>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 580 223' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-f7a3ff015a316ac83a9019de81267124'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-f7a3ff015a316ac83a9019de81267124)' width='580' height='223' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAIAAAAOir%2b2AAAACXBIWXMAAAsSAAALEgHS3X78AAAG5UlEQVRYw9VY23LiOBDNX0wCGN8xhnALYDAXA8YYYxsTCOEeQkLmIVtTNfv/T3tkEQ/JzMtuTWVqVY2ru9Vqq6XTLZmLZDLJsvgl/6ftQi3JuboqqQKTYE46BERjOjEn7UmMus6CZhjmne25mw/tl0YfTM/FX3s5C0CQ%2bGQ4cwQgy7IkSQLHChwn8Bx5cpwoStATMdSIPA8GT5AspwRBEgRRkmSiJjoR9nhCH44WKE/1MCUeMCD0KYkiRJ5N0jdCJPpUShR4ouF54pq8lJWJ%2bl1TFIXneSzchZgSUllRSos5TU2nFV1vdrxZY%2bD1btdNe9x2Z0bfvr7OdYKF3nd1y6117ZZzWzdHWmdQLBZs2zDN1mDQHg47zaYGEeQ4Xdft%2bb4JvWW1Xbfb7TbarWa9M9AtT2v3TLOfzWQLWgNif7btTVZwWDdMva4rKaU1mjTscWsYNIdjrWM1hkE2X0TAmDYlsOm0inBJACzHYgMEicmUxLSaMk3L379ai8dusLDmD4PVs%2bV4%2bXxhsHjyD986/hxk3e97tyvEU62UPa83mViY33zuBIE1ndqm2ZzN7PG4v92Og6A/GnUR0uzOngQjM1i6h2%2bGO2212gigpBvD9Utw/NvZfDXvHrRWxzTNlJzCqg3Xx/5s1/Hv7eWTvTpeF24ksmlk6iBsuKKksT3hDiiinOH4jK5U%2bmlVlUSZSzIsw/CAH5PgGAYjYYot5lgWeg5oi8fx5DlWklLYZ4IyjCKwkkKAUF7EsoQi8AN0yOT1MCSoAJ4kspDAFMsCBwJQxLKpcHLQE5Sy7AmuQGHYhRlHBBtVzZx2gON5lo2p7XnenCvp9A1auQIqlm5qNb1Uusnl8pVK9TqXr9f1alVDF9YPGl1vhFAk7ZyJ%2bHPxtHgnDKQpDAiP2bwR1bzTvzF04SN6twOCLIgKy6tl5aaBNBuPA98fO85oNHI3m%2b3Dw34wsJfLZa9nrtcbiPP5/ePj49PTk2UNJJKKqc%2bndwGgcnB8TDXWJf%2bvTD4PAftGMCOQmkD3KxJFCidBhBJmYcERaBWKeGoTiR8IlhFPPUQ%2bSZk6VbN3A89dUXs5RNSPAASZ5ZVCqqChQ9NqhmGg7JTLFYAn9CoDPKBMJgtlsVgC/gqFIngkN/SAGTQYAvCBz2avYUO7wMAJeOgLpBVRPWAJJbpgAB5uIYYDs%2bjFBKrVGjQwLpUwPAdG13XqB0/QRwgJYkLt7EqjF0z2fn4PeNzfL47HI%2bBUKpXhEXBarVZAFGi1Wtv2cLvdHg4HGHieB1D1%2b9Z2uwO0XJeIMBsOnePxZblcAXigx8cDBkIP4GHsYrEEMmEwnc48zz8cnjabDYDa7fb2%2b0e42u/3d3dzOISIt0MDgh%2b4DYJJmFfpKImR7ZyQSnPheUHTnO6mRI4PhWKOaqIdRNCZTIYuQ2QcMZEYjYo01BvlKaKohsKSeo4wed577ucjhLJVhRcZHNmwwNqDbm%2bnCBdrAIa6iJ7yW7GjIn1rpIzEqJ6cJ98HMcrIn/3/myRGPU9i7UmhxwuAYACaEtAJOp/Wh1eiukfrFIrSuXi%2bG29D5N9fhVynPfaNwDUm416tjJTKIZ9ggXyCUXhi42DiowoDghJxIirkE7KQmkEEDz1ipjjEElARvdSb8lNF/w0BIPWzWZwVUiGfQc96s/3%2b/TvNPOTcbveAeeBYWK/XmkbKVK1Wx0GGpAS6kI5IxDAFt0hKMMhUZNuGtC2SDwn9/PyMAgBveNA0xVr8Ekv/MYBYPK4IqlWxnMogl8nDNaoVCiIWDwwWFdbgUdEibFAbVDf0UgZbgZWmZY6OgpLWVmioq6jrN%2b8ALnMiLxXU/E2moCoqSe%2b0ikWCERc%2baRGgF0Aw6A%2bVKVqsgC7aS%2b4wIcCisykqRB/odweA65TAx%2bIxnlzDhd1u9/r6ivoDBgBAXceBVa1WbdsO6/cCoJpOpyj/L1%2b/Ak6NRtMwOgBMs9mKSuGnXiUQANITXHjPSl/ncIsrl3DOlrVyBSdiEfmM6xeSO59Hj1at1qHPXudKxSLqDuaLgqVVNSCEni%2bfQO9uozQAfLUlEkwDKeYMW/2e6Q2bfdOw%2bgPPtbyB5bnjmdf3bdM2DWfQG9n4%2bMg3ezXLvWlZuVoHUONYjl5jPo3Y8FPzIpFk6A7gstswe85sXOt0rYnnTHz3dlzv9p2JY/ruZBHYU3/oO52RYwXuaDIptC3jblcbznJNCwEwWIDPbadv4qKUSyYT5OuFYWLxxOVVIp5IXl0R5vIqHoszYK5iiS%2bX8UtQjPBQJpgkE0/EiOoL8%2bPvgD/xr0QrXUcALEu%2btzhyYpFPLzz5E89FPGWidrLG91D4rfan2gVKDxtO5n/a/gEPXyBaKBfw0wAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"580\" data-srcset=\"/assets/static/tsdoc2.a00cd81.b0b520cc04c2b97fd96522ee95da9b13.png 580w\" data-sizes=\"(max-width: 580px) 100vw, 580px\" data-src=\"/assets/static/tsdoc2.a00cd81.b0b520cc04c2b97fd96522ee95da9b13.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/tsdoc2.a00cd81.b0b520cc04c2b97fd96522ee95da9b13.png\" width=\"580\"></noscript>\n<p>If we are clueless about what to write in the description, it may be a sign of a more fundamental problem:</p>\n<blockquote>\n<p>If the implementation is hard to explain, it's a bad idea.</p>\n<p>If the implementation is easy to explain, it may be a good idea.</p>\n</blockquote>\n<p>Additionally, it is possible to create the whole documentations with <a href=\"https://github.com/TypeStrong/typedoc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeDoc</a>, see <a href=\"https://quantum-game.github.io/quantum-tensors/classes/_operator_.operator.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Operator for Quantum Tensors</a>.</p>\n<h3 id=\"further-reading-1\"><a href=\"#further-reading-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Further reading</h3>\n<ul>\n<li><a href=\"https://coryrylan.com/blog/intro-to-typescript-documentation-with-tsdoc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intro to TypeScript Documentation with TSDoc</a></li>\n</ul>\n<h1 id=\"eslint\"><a href=\"#eslint\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ESLint</h1>\n<p>Since the code runs, it is fine, right?</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 575 119' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-123b91eaabdb09ff83163bf44b24e9f5'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-123b91eaabdb09ff83163bf44b24e9f5)' width='575' height='119' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAANCAIAAACWzf87AAAACXBIWXMAAAsSAAALEgHS3X78AAADG0lEQVRIx9VW2XLTMBTlO4gbW5LlXZLX2Gm2Jm0DDC0lJUvDdAGmzDDT/3/nOGpNur4xFM2J5urqXOtuVvymvTV2NqMWNvIfXUO423olAy692faeUuZwblPCKOE2p4Qy2%2bb4EWqbhJnEtohNGefOK4FpmvcCsBkLZBoWgyjvuX4UF1UUCleKoFtGw544GIe7VVDkjuO%2bBriuRwi5FwCj1JdpMpnFw49eFPenx2mceFmazI6yi0V6NkuXJ0GvQnFg36ShkTEeaJ5cvrD1AvNJ24cBcM4RFiPoE4p9CsHmdS%2bZFmtbFDAJOgo9Bb0GHqQFxrBAWrxG1t40TAC7DzRg6lw%2b56U%2b4snYPO9xBRgLQ5GkOeD7QVV1hZBhFBVlmeZFVnTyohNGoig6SZICSsWdTpllOVCWVZpmcAVWIIRhBEAPZQ7bLAfT83zIAGzBhznImOENDpJSgRzHCQAZgBJkvYRtFAmQodTzEy2ExCJ3w%2bGoLLuEsI9Hx/v7B3jE5eXVbDZbr9fT6Tup4pOTz%2bfnF8vV6ujoeD6f39zcLJeri4vLw8MpHjqbnX779n0y2SeEwny1OpvPF1%2b%2bzEejPcsi4/HkdDMWi%2bV6/fX6%2bmev1w%2bCEMx%2bfwDAcDAYwgc8TS9hCA5igAAlZhAQP86yLOtBCzm%2b63JGHJt5jl0L3HZw71CL16FBTaHBNYXa8/qmYigUMsTqrqpfDORJ94aWm4a5K7oPfdN4etZM3UhNnyDZ2rxpHs1pXl%2bcC81WBUwTtyqcU9VEdqeiM5LVQS1kPVkdymIo01JEkYS%2bnMi8L4uR2n0vU1xTdaugoHcQuhka%2bT60RjWaDVM8ZiIA4JH5PQLGXQA7xo7x1mi1kGzZ2VPTH%2brDr6j3SY0X6vAqfn8NqMEnEYaymtbL6Xc1XqnRqRqfybwnnz/mb2MTAP6/PEX9xOKe7YtAJq5NPJcnsUA8mxZit0JdPl6Ds3qJ2eG67v8Et39kO0bLyfbD4cIWmUCrdAaxEmix7rA0LdMwEKD%2bfNj%2bgmhvza/hUwKemm3DMCLXDRznbaulX4v2/zB%2bAxepi4eJ6uyoAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"575\" data-srcset=\"/assets/static/letz.e344f07.4a00cd7bd6ebc3a7627acca9e7a69bc2.png 575w\" data-sizes=\"(max-width: 575px) 100vw, 575px\" data-src=\"/assets/static/letz.e344f07.4a00cd7bd6ebc3a7627acca9e7a69bc2.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/letz.e344f07.4a00cd7bd6ebc3a7627acca9e7a69bc2.png\" width=\"575\"></noscript>\n<p>Well, unless someone needs to read it. A collaborator, or yourself in 6 months. When the other person needs to develop it (use, expand, or rewrite) — there are so many things that can go wrong, be misunderstood, or take an unproportionate amount of time. When it comes to code, I have a strong belief that:</p>\n<blockquote>\n<p>Readability counts.</p>\n</blockquote>\n<p><a href=\"http://eslint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a> does automatic code linting — it’s “spell checking” for code and serves a few purposes:</p>\n<ul>\n<li>marking things that are incorrect,</li>\n<li>marking things that are unnecessary or risky (e.g. <code>if (x = 5) { ... }</code>)</li>\n<li>setting a standard way of writing code.</li>\n</ul>\n<p>The first two are a no-brainer. It may be debatable what is “risky”, but we can customize that if needed.</p>\n<p><a href=\"http://oppressive-silence.com/comic/oh-no-the-robot\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 800 575' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-3384ab2ea92800b4e7bd16bc47f441b7'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-3384ab2ea92800b4e7bd16bc47f441b7)' width='800' height='575' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAuAEADASIAAhEBAxEB/8QAGwAAAQUBAQAAAAAAAAAAAAAABwIEBQYIAwD/xAA7EAACAQMCBAQCBQoHAAAAAAABAgMEBREAIQYSEzEHFEFRFSIIMmFxgRYjJCZCUmKRwfBjsbKz0eHi/8QAGAEBAQEBAQAAAAAAAAAAAAAAAgMBBAX/xAAoEQACAgEDAwEJAAAAAAAAAAABAgARAwQSITFBoUITIjJhgZHB0eH/2gAMAwEAAhEDEQA/ACDVeJ9pppayOeluUZgnanaUQq6F1Y5%2bbm7nbXn8UeHZWkMdTXxqyKFBpR8rDGT3PfB/noe3CAyrd6YCpIkuTz7DmiBMxXJX3wMbHc41T6paWN1SjeWRFUEvKOUk43HL6b576qqqTUi7MouHiLxEsPlFSa5VUcz8pEj0LYI9cDHrp4/iDw80jdC5IEZVwZIHBQgDO3Jvk5P46C13gDUFDLEJCYVaOXqvvHupQLnuDlth/TUah%2b3WoitDkyshqHmt8Q%2bHKG2rVT3QuqZVulSOxZsk9sD0I/lp3wfxTQ8UQTXWihq0oJJ2WOKRAGwnIvo2Bk74z676Avwl7pRTgrOaeNSWMWCeflJUHPYEjvqc4P4tk4MtIt8NLDVw00jsVqGMb9Qn5xkbYDA422x31M7SxVTyI1dqDN3h8pZjAIZK9JHyociNBytt9XvsRrtbK1JGgikp5RO0wIl5Aq4z275G2hoPEiorL81toLRCzxKy1MvWd1jDcucKq5b/AK1A2nxNvc/ixbeG0Nt8h8R8u80CFzIu52YnbcDPc5B30QQekoTUp9xu9/t1XdpobdUSpBdpwIOi45l6hKsNsnvkemqitZep4agPZa1XMhkUGlkxnPvjJ229t%2b2rBeaiabjC7RS3WaliWqnZnaZ9lEh2AB3PsNMKgtJV1T0VXcJ6OPl%2beauaNyMgHlA/4zo5BRsXfHSLAq5W2sQoo9b/ABc6SV968tDG9BXTpNGglHRmLR4O4xjH3aVdLlcpIkMVtqg6sxEbUDRghjucqB2x6%2b%2bmV6vNBPR1BoBeqKpDL0Qbg0qFf2g2cEH2I0W/oyVDzWDiKSsqat%2bWqhUN1AxGVb1fOBnWKhLB7I%2bUFggpwb7yj8L3aoprPcZK2mnhqWkjEcSQSZdEDOe4I3YIv4nSeELdW3DoPWrLBUOZZXmkiKkNljncep/z1qE1VGXYGeqUZJB5osbDO3365mqogqsamrJYBsc0Wfb%2b8aw4/iN8t%2bqmqNu2u0AnE9tSzcOXGqtMHJcJ3kjV4gZJSshCtynGVBAGcY1RPCa2V0Xijww70NUkaVqks0LAAYbuca1/S%2bX82sXVq2Z8gc/Tx752GdPmpFpo0/OPIeqmC%2bMj5h6gDVFGwVDtN2TMX8Tj9abyT387N/uNqY4F4hpLDFeI66kNQlZTGKPlC5RzkZyewwxzj21S%2bNKiZeLb5yyuP06fsf8AEbUD8QqoxIFmb5hg53xvnb20zkBFSANNckqteVeX220dvo6TpYrNxHT3iaK3S1bwSU/mjyiQBWzj%2b9s6zzZ7rLT3mKokJkbmPKNsKx9cdtExa68lc%2baQfj938P268/V6vUI4XCgI72anfpcGJlLO1fSaYW9WFI8CtoTgDf4jyg%2b/rtqQg4ltJZFeqtqx4AL%2bbRiB/XWUZLjd%2bUhp0ZTsQSN/T93STVXUDPViwd/rf%2bdRTWaj14vs38l2wYvS/ia9/KGxAhvilvz6HrLpEnEFoqpIIKa50cszzIFjSZSxORsBrKFFFeKuoihjqIQ0hwCzHH%2bnV84J4bv9DxPaKyrq6NqSKcTSJG7cxUA9vkG/46qNTmJAGPyIPY4wD7/if//Z' /%3e%3c/svg%3e\" width=\"800\" data-srcset=\"/assets/static/opressive-silence-if-assignment.82a2fbd.af80d6d17676f5edd0725631e2549650.jpeg 480w, /assets/static/opressive-silence-if-assignment.775f9c8.af80d6d17676f5edd0725631e2549650.jpeg 800w\" data-sizes=\"(max-width: 800px) 100vw, 800px\" data-src=\"/assets/static/opressive-silence-if-assignment.775f9c8.af80d6d17676f5edd0725631e2549650.jpeg\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/opressive-silence-if-assignment.775f9c8.af80d6d17676f5edd0725631e2549650.jpeg\" width=\"800\"></noscript></a></p>\n<p>Source: <a href=\"http://oppressive-silence.com/comic/oh-no-the-robots\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">oppressive-silence.com/comic/oh-no-the-robots</a>. Using <a href=\"https://eslint.org/docs/rules/no-cond-assign\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">no-cond-assign</a> would have saved their lives.</p>\n<p>The standardization is less obvious. Personally, I like setting the linter to be as strict as possible, going in line with a controversial piece of wisdom from the Zen of Python:</p>\n<blockquote>\n<p>There should be one — and preferably only one — obvious way to do it.</p>\n</blockquote>\n<p>By reducing ways to write something, it reduces the number of unnecessary choices (<em>should I indent it or not?</em>) and allows me to use my cognitive resources in a more meaningful way.</p>\n<p>Moreover, it makes it much easier to collaborate. No more inconsistencies because one uses <strong>tabs</strong> and the other — <strong>spaces</strong>. Or different name conventions. Even if you verbally decide to use <strong>two spaces</strong>, it takes some cognitive power to self-police oneself… with no guarantee.</p>\n<p><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a> can be configured in various ways, to be laid back or strictly pedantic. There are many plugins with settings for particular languages and frameworks (such as TypeScript, Vue, etc) and styles (I recommend <a href=\"https://github.com/airbnb/javascript/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Airbnb style JavaScript style guide</a> and <a href=\"https://www.npmjs.com/package/eslint-config-airbnb-typescript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Airbnb TypeScript</a>).</p>\n<blockquote>\n<p>Beautiful is better than ugly.</p>\n</blockquote>\n<p>Many plugins go with two possible settings: base (only errors) and recommended (enforcing good practices with style). I suggest going by default for the latter. If you need to override an option, it is easy. And IMHO it does not matter nearly as much what style you choose (if you want, go for tabs for indentation — you have my official blessing) as long as it is restrictive and enforced ruthlessly.</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 456 109' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-e9651e6e305592063d0847db7491fa0c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-e9651e6e305592063d0847db7491fa0c)' width='456' height='109' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAPCAIAAADbBV4wAAAACXBIWXMAAAsSAAALEgHS3X78AAADHUlEQVRIx9WWaW%2bbQBCG8zvqAwwYsDGLHR/g2/hObOdw1DhSkqofKrWVWqmq%2bqm/vs%2byjpMmUVSlUiuPhtXLzLvLzM7AcpDdczngSmeQvU0glck0ik5gW2/SSSL7I9sEAK5lOZaZy%2bVMczsahqEwYmzlHj%2b0K5CMj43Pkp/FD8lPV3g2AEZN01QCGcctoKZpEbTjuHgtK88I9jzPth1uUW4VsKXcG/N5G5DP20%2bYNsZi0XPdAgDFjtrAPBwplpT7NdFkNUthS7mV01Z8SXZdl2WxE/wBaRDraDS%2bvX03nx%2btVqvZbL5anYB5cBCUK5XDKIoGg/j8fN1ohPV6Y7PZdDrdWq0Oc7k8AWC8uLiAA55MpgkTCa%2bvb1qtNvFEURNXGDa73V6z2YKJF9DtdtvtDtrr9bmFjHY6HSbziDvtMIsVoOFFmFsoeOQmE6AK7D2%2bzebq9PTs%2bHixXq%2bn0%2bnl5WWhUNT1HDPJajgcsQ5ZEV8cD3necrkibSbO5/PpdBbHcb8/WCwW4/GEZwDwYldlgc90FWK73U1CDEejEQQSIx%2beggUvGAa7xnQWxEL0YRjiBRBGXUrD80rbBLgI1LEdOiuppMMbQJ1MKuXIWtmyH2xVuzxmyzZlw8j6mgbQSXBedRHXDjOyNZRRtVDSA6qFHNVOtIHCyqsIu9td4%2b3m7sgEjGDdvgM0elBpiHK1VHT8ki/KNb9c9cFIqSSBVxQikFoJpcVzGYWoiHLdL4I95fV9oVThR8anykoveF8gg%2bltMtQ0/YCvUdGxRO8sWP8sn/4IFl/9%2bCo4/hwsvoCDk%2b/B6psY3Xiu7QXV4OijmH0Ijj5JWv8tNDF5X6pEFPQVKrfiVRNR0qAUqVRKVaAkyod%2btSWisWjEPvtaronmVISxCIdS610/2QDRGIj2sYgmIhzJalQiSau2ZK3%2beC//Xn%2brAG3ER9VKOtoydM4D2f8o2MhZpn5nTARg6FtNvrsJMKx/LrxknAYcBTIBjgRd0zIZLZPVE81K1RTWtqoEmlQ98WalXYH/eBKn0plWqXDo2vxTaHv6M0fo6b39m/sFF3e4crnHLlsAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"456\" data-srcset=\"/assets/static/prettier.75a6daf.2b6d5aba917db1aa54a02452471e5a34.png 456w\" data-sizes=\"(max-width: 456px) 100vw, 456px\" data-src=\"/assets/static/prettier.75a6daf.2b6d5aba917db1aa54a02452471e5a34.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/prettier.75a6daf.2b6d5aba917db1aa54a02452471e5a34.png\" width=\"456\"></noscript>\n<p>I do have a love and hate relationship with <a href=\"https://prettier.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prettier</a>, another a code formatter purely focused on style. In some cases, it makes code, well, prettier and more standardized. However, for many things (say: indentations, trailing characters) Airbnb can do the job. I have also found that a restrictive approach to line width can occasionally produce an inconsistent style (and is pretty vocal about that).</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 873 313' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-3faf1bc0991407c08edd2dda0cf471ea'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-3faf1bc0991407c08edd2dda0cf471ea)' width='873' height='313' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAXCAIAAAA0gN7GAAAACXBIWXMAAAsSAAALEgHS3X78AAAHCUlEQVRYw8VX6ZKjOBL2O2zsVtlgYzAgLqEDhLgxvstVPb3HzL7/o%2bwH7q7p7Z6N2D/VI2fIqdRBpqTM/LTYbDZr01ivDctag9us1xs0TQNiy7K29hbCtWHMY9arlWGY5sQYKOY0F%2bP/1LLYbG1f9n5%2bWHsiLobs/HfWX1l/84LQJREff8mOb2J/D4tRZsnnz/vjqM%2bn6uVaN60aqy5JYymFCNlqsvl/2vMu/26ANZf/R1Hs7o%2brTQZY2%2b125wdx0vTl6TK0fVk2qhkapVhZirpRdV/pMq86rXN%2b6DomEiHTJCFpRFgY7VwvdHexG%2bBgsJJt29a0or2dy0O/Bz%2br%2b4WBBg/hdKDTkU5dEJpz62HXeipfLHws8nWlreM4X822FpDjP03Dy6U5jUXf5m0r2zbTOj0cdN9l/aDqMu37rFRCcxUmQUQTz3M92yLurmna2/XWdT0oTVmW5UoVURQnCWVMaF0yxiGkNM1zxbmQMssyhVmQY8rpdD4eT03ToWscD%2bfz5XK57vcjuvp%2beCwLBusIkRWFFkLGcRKGUZ7nmNi23QKmrJZmFAXnc3M5l0PL24ZD71LTw6jGXvZ9Xms6DLLSokiVS1yuhE%2b8yLUT4md5cb3eoBA%2bQ5MU%2bkEVaA8TclXAmqqq0dt1oB6fr%2bsGI6EltIEEGsMGSDAGBhyPx8PhALXKsoLimAu%2brmsYACqrCmZjm2CA1hoDsDULx7H7oTgdy6aVRar15Z/ZcJHjS5zpVLf65bd8vMrhIuoD85N2UJ/ufSM1jmK73tqOQ3y/UHmG/ZFCZdCv4pw3dSU4e7leWcqgHLS83%2b/QDwoNw/7l5f76%2bna73WDMOI5t2w4D/g9oQr8gCGEnNkIphW2G1jNfQFec4cMSNFFjp3yfTFeIsVgInIuXBDSW2k8YoZzE1I8SPxEkYZMk5gGcOiacx7hEoUe2m%2b1ut6OyikWdyDqWdZK1cSrjhMWyiUUZiSqmIgoj3CioFc4MCMyP/FdJghvyIDQf9Ts9mu9zH5IFHADBEWSuLdM0jOcn01hNXmYgrqzWk0%2btJ5rDKBrTwDkIoPZdl9UXPv7KmxvvP/PxN1YeKMv48C/W/cLae1qM6VTYg%2bAJ7/xM6X/zKQb8IX3b9d2wOYxmA1FHOxBU76vXf8vhJMe7On0S/WXnbHet9o6td2ltLXadcjsl45Jaycb2mE0tc7VaPq2Wz9gDc/k0JQeYZ6wsJBbQnEw%2btExXyHFcQoUfszCOKUv9iHphDD/0goAWjUvCWCren0R/YE1PkrQp875SXa9OXVHjigqaqzQXriiynO%2b8MHJ27uZn5bdFFpAyjvHppmxKlvQ5a7Wu8rzLaC346fJWS9kW%2bjjeLre3w3juy%2braqX9cml/v/S%2bn8tzl97543etrHR1afS6DGs6WUvNnZeiFJBHd0aWxNGeUMIGKR3Yxp/u/fH4y5o7l8nn59NcVmsZquTKenlZ/e4Joujion59XSwNAY6rNefbPgxK%2bY09oB0Bgrs3JktU7Tf6K38rY4HLDhUETM3n2OwL4ehsf3E/HQtgr248cQm0XcTIOWEYowqgMKPcTDkSEYOnwxBGpQyM7Cmwa7RDlnNC2Hdd2Hcsxf8c5fwaYA%2bD0eI1A5IQiLXp9/cyagXfnbDiz7sTywglDf1%2bRQ0cOrV9pr9NBUdS%2bIiRgQRLtgs12Y0/Yx7K3X47gmyDxEwyw8L2NF6cByz3iRpHnBskujLiMXM8FMvUA9BBfuhd1fJX9GamKp9HLS7vfF4BJeyClWvR7ve%2biLPmLE2aO6z/DJ1ZIJHAXc8Zk5ocaYNnOzk8zwnIShSmnU0ilXCrmh5EYrlNIVaXcv%2bSnu4ABEomcXS9N2%2bZVyZsWaK84nspxD%2bDEm64AlUBNWVA2XFeh53sAu%2bsPc%2bvF/Gqx/VT6ifRD3P8YCcGLKeWxR4K0OQJARMgDzVnuL6waSAzAxKpqwkOZjDOVAgWeL1XT5gNgX8MhUYrXOuwHpjUBJCFR8rEGwB19KkiKEwhSHuMEYEAQevBgsb95YYJdl8MtP72K/hQyWVUCELWpZVWyspbXa3O%2bVvu9Ph2KFjAW8iqrq2QcgHEtP1Xbj/SExcYCmLAJywJe%2bAFJkoDgNCjPNUJQIA93GJCoKj98Kq6fs/EWCagO7F503cTUbf76NtzfuuOxupyqYVBNl3et6lp6PlJGcbYFXPzjXp4LZ%2bsQh2xdHzHU2e18AiZ0fEII3iweHMPxfEhxLCHLAEu9IGJpRCnMAij1gU%2bReIWIGYukgBy400/iIIrclO5cd4Nl8Uz7QAPcrZvsYsNcbebX%2bvzAM9fm1/8pl81NpGPwc5I2jC/0KA8wizK9%2bCfh%2bvFONIw5Dc4w9gOv0AMtI3b/cf/vkdz6cYz1zZhHOP428Fvfr/Ah5T/tzKLZuewFDAAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"873\" data-srcset=\"/assets/static/prettier_bad.82a2fbd.1e7d7e0e44db1c1ff9f622ab7e1283a7.png 480w, /assets/static/prettier_bad.62d3eb9.1e7d7e0e44db1c1ff9f622ab7e1283a7.png 873w\" data-sizes=\"(max-width: 873px) 100vw, 873px\" data-src=\"/assets/static/prettier_bad.62d3eb9.1e7d7e0e44db1c1ff9f622ab7e1283a7.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/prettier_bad.62d3eb9.1e7d7e0e44db1c1ff9f622ab7e1283a7.png\" width=\"873\"></noscript>\n<h3 id=\"further-reading-2\"><a href=\"#further-reading-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Further reading</h3>\n<ul>\n<li><a href=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">typescript-eslint/typescript-eslint</a></li>\n<li><a href=\"https://blog.echobind.com/integrating-prettier-eslint-airbnb-style-guide-in-vscode-47f07b5d7d6a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Integrating Prettier + ESLint + Airbnb Style Guide in VSCode</a></li>\n<li><a href=\"https://itnext.io/keep-code-consistent-across-developers-the-easy-way-with-prettier-eslint-60bb7e91b76c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Keep Code Consistent Across Developers The Easy Way — With Prettier &#x26; ESLint</a></li>\n</ul>\n<h1 id=\"jest\"><a href=\"#jest\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>jest</h1>\n<p>Testing seemed the way to slow down development, kill fun and momentum.</p>\n<blockquote>\n<p>Errors should never pass silently.</p>\n</blockquote>\n<p>I won’t fool you: tests require you to write a few more lines of code (see <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jest</a> examples). But ask yourself: when writing a longer function, does it work on the first go? Always, no exceptions?</p>\n<p>Probably you have the same doubt, and at least test it somehow: open an app and eyeball it if it works, or open a console and check if you get a correct result (this REPL / Jupyter Notebook approach for testing).</p>\n<p>This interactive approach is fine… but manual. You need to do it each time you change your function. So, how about testing it once and then saving it for further use?</p>\n<p>Well, with <a href=\"https://github.com/jest-community/vscode-jest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VSCode plugin for jest</a> you can do that! Write a new test and the result. If you want to make it REPL-like, instead of writing <code>console.log(x.toString())</code> use <code>expect(x.toString()).toBe('')</code> and you will directly get the result.</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 581 343' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-01dbfe8766b291497c549b9aa0303f22'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-01dbfe8766b291497c549b9aa0303f22)' width='581' height='343' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAmCAIAAAD7pgrOAAAACXBIWXMAAAsSAAALEgHS3X78AAAKw0lEQVRYw9VYWXciNxbuX5Exte/7XgUUBRQYMGA2Y%2bPd7aXb6U5mHpL//zafSoa4257unDNOTlrWKV9dXQnd/UrveJ63bMtxXNdxDV3VddPxxMFANU3dD0JT13TTisLA9VzbcX3PAcKyLEmSsFAUReGbTfzm8E3aO5ZlG3nz8HA2GY/zeuK5oR9KR8dqFLn9wcGwV/ZHk8Xh4WQ8HA7H0/Gg3crDKLTBhKkzLMMLPN2If/pPAH4LcHzVng25Hd1bMUC25niGYQSRNPwcy%2bGnFFEQOYAcp0oKCGRNR%2bcJMStKkmpaILY0S5YksoMgGKoMAEs1WaKSViTJ1lUMpWpbRZZ0WTJV5e0ZgG5xUNcLbNPgiZDYIuw8Tj7dlBer1nLWmLqGH/UmnfVt8/A0X1yWx1fd4/eqYU2y8UE6uB1%2bGMRdCMFUVVvXeom/bKfjLBgk3rAezZrxLI%2bHWXhWNqZ57Orq2yrh3RbgJUlGowNN0SBdS7MVSdHxJ8mapsmqrsiKohuybui6IYpEtLqiWJqpKyrkrkiiqkiAoA0MVeyILwFFTZHJYvntveCJAWjAJn5sE/lzbO63b4d3m9bRYX2K7mg2DMRQ5F4S7Kf%2brBHOmtG8FX%2betD%2bO28fdrIz9VTs96TUh%2bF7sKcTFBdqpvCvFVpD41zBAbFRRICw60hQ9tKLEiiFdVYZMZfy8oUIXMozENzUw4xqaZ0BRimNomILUAeiVpN/cU/%2bUBgzTggoAEFcWeJZnWCjjKZAIMBeu8m%2bOunYlUYbjWDLk%2be2Q%2bD8vfDe8/iUakIkGZKpnluFqe8xejanVWBoJf/ppDzMwZ56EGnLWGj24INAgI1QACUgcQyIVuBDEv1UDtuMhTwFgWX6x7K1PhoNBPhw0Dsbdk81gszkYl2Ls2KMsGOdJL3YHSTDJ434Cg9JEScjMRsfqSHD6qC1afqIlgWaDFfFv04CqabquUoNJ06DRjLIsQMoyDC2KnDyPmjEDGSM5B5bu6lrqmpFtWopkWqBRfTWsG3WEJtlweUUL1MBRDJbn/iYNPAUK7sn5ajVmb6%2bGb41hPc/3Pd%2byHMN0DEOndk%2btiGGJM9AkXP1jSZjhYT/EF0ho3noDsSfShGdd3NUX4hPBl3WH%2bPzfn2Ngm/WJy6IxlRknab1o5a1mo1P2wzj8CW5Bjk4YqGwPzAiA9xi2cnGuxvGgQGc4Hkim4hbDfzHsFs9RgKtEBgALqTjYbfxC9GBY4lo8y5DkT%2bDv%2bYCJ6sY0aBRCSGV5YaTIqNryIiq6uemnvqE2AqcInW7i92OvFbqmpsLETE1p%2bA4ScGhqvmW2fLsdOv00aAcW8kNi64i8ndgbZ2EOssgtE7%2bIvSJwEIsT1wYmdazMtbBDK7ARjhlOSCOu32QRVFQvE1QnjRlXJ1x9ywfgAbqu0RoTK8FyTxZlQYT1F2Whhw1Hk/KAHPSgHpahs58FhiQ2fdvRlVbgzFpp09VT31214nkedUKn8K1lkdQd3TP0URZu2um8lQxitxU6g3q46WTIjpkHBpzUMfchlNT3dMW2LcOys7A27jDIS6pX51WnkdU8ncR14ZmZvMwDJioEjhiGCFZISJVIoxarqqqimbwoIcqjc6RLVpCqpkNKa9DotmI4JIeIEqZkTeUlFHa2pdoiCb4iC3MkU8TPYXUkaisKyhGeLIfHYCFmUPpJVUqVZfIP1QkvkyJHURUyRXSiqruS5wsGHNLsyoQE07R8HyEoCsMoCEJ0k6Q5nza4NfBRnCRpA1Ou62EYx4nnBUABtm0nQYuTOESP6RJs6HleHMe4eGRZBoxp2liFYT2rp9VCbIV9LcvGT%2bOL7vkBuau4WJimaYZNgIR8XwujqrY1IcEwzMViuVyuVqujy8urdruDZbPZ/Pz84uHhw2azmU4P1%2bvj%2bXy%2b2ZyCbLk8AuXJyeb29hZked7C7KdPnzEEHjS3VcN2uHiA7P7%2boSxLnB77QAR3d/cXF5dXV9fHxydYjoPOZrNer499Hh4erq%2bvMQvKo6Pjs7PzomgTCxdf8wFNU6mFgQFIEV9UnQDwBUzkUckeIgEMYUAtmMXQI3HWtkk96FWixX0HEy4wfiXCMAyBpwtBg45llAybA8AUOKEEdB/A%2bFGqf7otpoIgwCxK49cTGRplwDSRXnFq/Lf0qnimzAAJRRGLJNQ6xbzsL/Ggf7mE7kw7pXlJQBfulldmYnxtQvA8XCwhqjDwAWBINYCDVn6lYA09NJUWVAyR7E5QNfP5aZ7z/I2pbyB3MIDX8Prr5TTazoRgrJeXl7DO09NT2CUMFzCcAethhTAkqqKvzvrVyV496Fv01zQAfw/8Jw3AdCDjRqNJzworhH4QYWCIO3Xv9Ish9LOzE0pAj65AbVsDsEjJZP4lDFAe5CoG0yFEd3p6hkgyHI4mk8PZbAGFIAI0mzkOMRodYAqG9P7m/YcPH2FsUM5gMETA%2be233xFJQIZweX19Mx5PTk5O9vcHj48/4wvz%2b8r034QBERWJppv9shtHwc4H6vVGt%2bwX7U7ezBHOiqKDuBYnKYQK5cCWwEC306URttPpgh7qAg0w0BU01gG2WwIJDE4PPrcu%2bPYaIDkX2F2FSCKgGxq6BqO2nIA8AqEZBlLLNggixhFxwlh2sU/dRg86pBEMX3QQ04X/f6/CtLkrKN7RNxXdsIqisHSNVtRIfdHwOpr9Gk0ek%2bFVMr5LZp%2bTxX%2bi8b2flcjP9/dIZ3DvM2Sfm/fvkeDu7u/h9HD3m5vrh/v7x48ff/nlV6Q8j/gWSer44udRmQdVOg%2bqvhsizdO63Seu%2bNRxWnri573KP18wUPkANABf3PoAfsiPm35z4KZdw4kNr6H7uRV33bTt%2bTEkmjVajWarXbRhYPVmjrIiS%2bt5q5NkjUbeaba69bxTdEqQWY7veKFmuJYbohyAYnUnsL3IcgPTDdwgMtzAQgERxX4Qu36EhGZWS0w7CKMU2ToA3vOeMwAX/YIB6gMoR2zLJLWQIChuIrl1Tg9QiJ5cb9ZX6/O7s%2bkR0vl8OPpUXH5qzK/t4iCd37XP/p3N75rrD8X5z1ajNzpend2eX95uFpvV8uJocboeHx9NN8uLu9PD949W1usUvdXBeNIbnMLB%2b8NRSYBp2TeLcWf/Jgp7%2b%2bvV%2bcP1p99vV/Pzerhvxs1OOtdl8igobtuLp0WevGrB0KtLPXknbMXpfgPybB4U7dPDg4ez%2bdVysh7vH/X7xwfnJ6cX0/3RpDecj5cLsDWaLqbL%2bXQx6ZTr8QiU57OD9Wh/PR4cj4fLQX817D9ere6uLzr19qrsXg7686LY9Mt1WR6X5fWwfwS2Ov31YLVo9xejweVicrE8OB1MJ/WynTXmzYEqyfz/uNH8oYE4QgFo0guNqigCz457ups2a3t7uFmSyyW5QVZXrtoeXz098EyNY2q4NHEVIFQvAoQYtzPcz/AltyzSa%2bRuxkhV2UsvonQvdjtEKCQb8tsdamQxiS5C9Qzyncfd6k0FNwkU4PRCAwC7t5u6HaWYFqXtfVYQd4p8BXim5VfbHwQvKJ%2bS0XP8H68yovBdBhRVj6MYPkAEIXCBnvYbqigQOQr/7LZjQEWYMwydvk4nZmPY0lEZkRfcf3bbMaBFYYCShZgQufWRG7T4IzTKAKdpRhyF9EYGjFy9if8wDFAlwN53oUr8cdo74Qdv/wX3q1Ro9lWyrgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"581\" data-srcset=\"/assets/static/jest_test_repl.119bea5.e79ae289ccf400674b59dfc414980bd3.png 581w\" data-sizes=\"(max-width: 581px) 100vw, 581px\" data-src=\"/assets/static/jest_test_repl.119bea5.e79ae289ccf400674b59dfc414980bd3.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/jest_test_repl.119bea5.e79ae289ccf400674b59dfc414980bd3.png\" width=\"581\"></noscript>\n<p>Then, we can set it as a test. We wrote once but turned into a guardian of our code.</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 705 329' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-a32a252e6781fbacb4ffc2dbc639e807'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-a32a252e6781fbacb4ffc2dbc639e807)' width='705' height='329' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAeCAIAAAATj48OAAAACXBIWXMAAAsSAAALEgHS3X78AAAHA0lEQVRYw9VYi3bjthHdr%2bhKIgkQxJMEAYJv6v2y7JW9Tnq2TdLm5PT/P6NDUrK93WxP0uS4XmhMQjBMYzT3ztzRO4xxmqZ13bZNlWqtYno%2bRy5Lu25RFuWy6%2bbzeV03bV0aa4XgsB8hhBHccYDQMH829GLldcY7%2bFFxXJV1kbsYjk9J04ZCUZNlmc2KPK%2bKonAut6kUnNEoikiAgpk/A%2bt9CAI/CDwwv5/05vfzmQ/34BXceAeH8D04zkxKBceZeV4m6nNzf8z3i3RhRaqardvcmm7rdh%2ba0zlWZuc2x/Kwy7dwfh4RLdiuMItMz22yK9JDaTsT31TZvjSUhMErONAHHWMhBAkxfGxa6DZtal0lPJFUKJ0pkyltlKsS62hENVdOWTCCkaBRzGimBFzBEg6/7SdOCcUoep0IwC0IUJIkESGe71W6%2bX7%2b1/v2wzbfFsqiwDMsWpr4kCe3Vfqhdf86due5O1Tpuc1PrdsXqaLRiJkRTnAd376eAzAgAmEYAqYjAh9qrJgiIQHDYRiREMDAacQiwgdjBCyCxSgMCfxZiC/ExVdC41fi8XMEOECIhDAHPryfTKczoIMPt8kE7qjnJVDF8ycQo4GvA309Dy7wWfdr8IwAvfr4HEIRgeTSdvluV5WlqQp9OM73%2b6IyqNbxPEuKRHZGdZnOJPNRYJkruSOUE2VTmqpIBshHX2TVl%2bMrYcF/ggNCSIgAfMZV4/a7pm0yl8WLZXW6qfLUjxkvtbKKQ4bJEwlwopIlxObMoYh7XOsoFaGAaEEURg6MQelZ4Y8BG4MWjNwY3qHBYMlDw/wPcQAiMGAZBwAYjKYJqYr0eFpj5eZarnJz17jbxq2cTnhUJbJJ4%2b8Wzim6yvR9Y24qe6rt47xIOT1U7m/r%2brbJ71t312SnxhnJdqXdFGbj9HlezI1iEZMS32%2bnnJIobYXi8wpA%2b3Sc3%2b8AY7w/PsaEEByFKMKc88QYmmSCUsV5lsRacC2FlHGqU8FYmdlY9mGpbGITYWJRqIQTIhnNY2Elh2NKSuo0ljSChAvshxVItQRj%2bHechaX1IOyYqSgK0xgi9T9DCCFrLeQTmIMDY2iZW/Jyr7oPobTZ6miWO0g%2bQmfF8aE4PLjVqf34c7Y8NF3xz1/uP33an07LVbLWkZ76wPseOSNgZgOYrrzv6zQKLhCC9DCs9rDy/T/CAYQ4hzTaa5zegWEQkUTKsLQkTAptddXyWENKZRJKXNoXv8FhAB6wHwaFPBvS8AsQ/BdQ4D%2bxDjDG8KDRrg4EPF/J6sDKkx/FutvmhzOLDafUdOvq5h4K3NNTrnREr59Jn7JQAJp0rAPgQB9dhEEpABaqUp/vV%2be71elY7/d1VxcNLzmikPzRGxjPEIrjGMAwQggcGEMREtp1xeHQ3RwXh2O7XJfgQC0rQfjrKIXfHgFfJ4Bv8hSBC5YwWSyLx%2b/2jw%2b7h4fV8dQt2rKTrSTiDUUAjgtnhQjgaxp9cgBomufpfFGsV/VyVTRtVjpb8BzI%2bn8RDl/pB3wflFzXNE9p9NkBQo/H%2bY8/3f3499sffjg%2bPG72q24dL2MiIQL47USAQqlSCl3PPZAYQfc1AAxDVsdDhgKBB9maEjqy5amXuIxhjp7fXWXpYMPOFwn0xbb/6EvxFxn25XrwKw74ARccWsgnB2AbPBnKy2QCarSXpf1rOkGDlplN33uzKdy86QT29Hewfpc/SNhew8KA/weKaDpo2KnfV7XpbKDNULdg52wKr0suHguc7z/3EtO%2b4F0k0mxoU0cVDH68RO8lAlAETGrCFxyAnetNc3u7uLtbAY/X5abant1qB5W4Ojzk61O5PRX7O63V/rh4/Lg9nbqbG5Cu3Xbf7PfN5nSIk7RL5a6y28JAqwkiap9ra7TLl5brxbr6/tPx42mdMdMYWSbypslua2uUBE3V2eQfuwZUFidh5/RuEFGb3BzK1HIr%2bxzofw4hxrTWY2Qhd0JFhovN9Gpdta0zVuVJkS8OIClEopOiU7bQRRNDRhWsrGzXutxpB5br1KjFIl/tVzjiRSwyEEVKgDQCKV4ngnIWJ3nC4yzX3Txvy0wSCcsgnGBPBpKLRjAxkrdGQafKSJhIBu7BIlwzxWD/yxRycQB0mzWXCPgoTOV0vS08Iid/eQ/wgCYBINQDxutlsjeb9PgZbIQQwKyHxMUGCE1naADD2Ab15vdAGoRPjwXYOZ3M4OE%2bGr/I6DfMBsE06/HqT2aDIEdjLzU8apToyP8VCEEEQE4PlAp4JFMVCEEx9JMjLy/t4pWM6EpJ/NkyvnJtZDL66jdFz3%2bFvy6NfuMXTc8ccJmDyts39arZVGT8Vge/%2bfEEIQFaaPQJmvqhT/82xnMEgANj3Ie%2b7JtyYFSjnuehb3C8%2b91N6Bsb/wbraQCTV0S9DQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"705\" data-srcset=\"/assets/static/jest_test.ca5927f.844036491917ec27ddf9a9b12bdafe6d.png 705w\" data-sizes=\"(max-width: 705px) 100vw, 705px\" data-src=\"/assets/static/jest_test.ca5927f.844036491917ec27ddf9a9b12bdafe6d.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/jest_test.ca5927f.844036491917ec27ddf9a9b12bdafe6d.png\" width=\"705\"></noscript>\n<p>Tests do not prove that the code works. They safeguard against mistakes, and usually stupid mistakes (e.g. instead of a sorted list in ascending order you get one in descending).</p>\n<p>It is fine to start adding tests gradually, by adding a few tests to things that are the most difficult (ones you need to keep fingers crossed so they work) or most critical (simple but with many other dependent components).</p>\n<p>But, if you want to gamify adding tests, there is a way to go!</p>\n<h3 id=\"further-reading-3\"><a href=\"#further-reading-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Further reading</h3>\n<ul>\n<li><a href=\"https://dev.to/muhajirdev/unit-testing-with-typescript-and-jest-2gln\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Unit Testing with Typescript and Jest</a></li>\n</ul>\n<h1 id=\"travis-ci\"><a href=\"#travis-ci\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Travis CI</h1>\n<p>A typical issue with academic code is that it runs on a single computer, during a full moon. So how about testing it externally, with every single commit?</p>\n<p><figure class=\"md-figure-block\"><img class=\"g-image g-image--lazy g-image--loading md-figure-image\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 702 330' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-c8f6390684fc956118dce673ae4e92ed'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-c8f6390684fc956118dce673ae4e92ed)' width='702' height='330' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAeCAIAAAATj48OAAAACXBIWXMAAAsSAAALEgHS3X78AAAGlUlEQVRYw9VYS6scRRi9v0pwoyCIiIuASHCRlSJoQFEEwZUSjAshShYhhhg1Bl%2bgopFEJKBZiFuNmuDNnZ5%2b1qPf1e93j6e65s4kBFG8M%2bCt6du3uqamu76u851zqnYWi8W4WPTDgErTdlmeD1P9sJSdadyt64eovPve1y8dO5oKN8tyIZJEJHEsyrJMkxTnqqyyNI3DKEnSKBZVWaJD23ZbH%2bM4ykEaTkF5EMdxFPueL0Q6DOMygLppuOej8uUXl1997ilCrDgMDcNCV0Ko7wfEoYihyHLOOHUIcz1GuRDCmOthJKZHjNsOoJ4ZuU0wTs/1KKFBGPX9sAxg6yPYNoT6vs/yApVvrvx8%2bsRrVR43srR1XbdIi65r2xbhNjWwJi/Rf2rpG/Som041df1Wk6fru7KWMAaYC3zKag2hsqoMm6By9uxHzxx5mFEzCnzHAVocw7QpZZTSoqoxd45NkRsu445DJcAs2zSJZZrzuWGaViTSbUzmKFlmYWSOHTj6TDcM29AN3w/XAeCRbdfKRKlyyllZ1agPfS/PsoyqqAq6r1pWpe%2bX/eTTxhVup3%2byZTx4VMOI8Y7yLEcyrG64H8BEJjdumteuXO2a8hBlhQygKCvddFA59c4HTz/6YOgTRpim6dSh85kG0gSZ2paTJomuG2EYR2FkWcTQzcAPwKRoJA6zbWKatuMQwIkzhv6AqW1a%2bLnvepblHJxw27a5fWvXNGxdN3HDbsLIjsJJUVUSZ7r2w7XvojhGCx7fNk1RFCpFkTtIXOQQshjt5ZRK3ZTK6iukOApyulZ/VY2bNG0j07tt0V1B9kAoGoZ6KlVV4SEKInfRqMhqQt1x6A8ZjSIaiBMqp898%2bvwTjyURB0i41AyPOASTgEvP9VGPRVpVJaMMB3ggz3JvUhalKSplFWtsMInVL4M6poLbhsUkIG1CmGLtnQlbbRDFqFz/8frpN1/H6PIsC4II6ovBAUupELiEgKdZjhkMvMDzPCQD6mEIxInhnvFtnAJ44WdVFvphmmaRLPGaRldcK4PBWIbxkEGo7XplaS598v0bLx4v8xBJEguR59LSIWOgWXlRIi%2bBGXAR3gHyFf/yvIjjBAYWLVmaQYsBMEwIdD1JEjhC9AUFbGqsIA9/mvkojIEOBUsZAIZrE4bKxYufH3/yCKWwccIwTNfzqMPg/2zT4cyDewM5MgJd5ojEdd1JpF3cFMLMKYPfQx9tT7PtKUk8D46wqdtNBVDmxd7tGWhanxug0f4uCO1jFrPR/ot39v%2bRuX0dKKUOXP/pt88unG/rbJyoQ9q4rrtzrCo9Vi3j0lzIBNr3HLAgvXIiS/LZXKRKB6TNBC6Hfg0h8IxuTUr89oWjD9xHiQE87O3NocdzDUqceYzPZjqxHbgoh3CRCEwlpNfAVJoOEgCmD8AyLYo%2bxCbw6/rcBO0Crxucrr7rtNlc1/TdP3cJ5ev1wOSFJFKzNDKNOawqmhCotNA4DzDP3XTZd1ORb6KqJ4GWvhqXqr1tVGn3C3oMG3Fyi5W6LG3lIKGxWLnRxajm3XLC33%2b9MfTNVph8ezkA/2w5FJW3Tr1/7KH7A8%2bGfmEl4HLXMi3OXCwsGeOB52NVAGDAxjHmpkmGb3FIwpHUFjLuwQ3hEvhxCIV%2bUwI64uWUYAecB1K4dkQsIJMw0zAhrOMqAIBBpJm00zd%2b%2bfLjD4MwaOoKUqdMRAqM45OmZVEAFSKWBW1IJwFrATnARV7AwEEWgDJIRzQt/CEgiRD47UYW/nGTVG2digSSA4XB2NZJvCpNO0QiGw6fmWsa1wvkkvL8Vy8fO5olHt4fCAQCDK%2bGqcCB1Jx2NATMD1483kEQhPBISZpjZmD1wjBUS7nVMm2zA02aLMjDwA2gnpy7ePLaC2Fwalvl28tXT77yAmOOiATjLtYrtu3Aw0F0YcDDIPSkjfPBkn4QAvSccYQT%2bj7WqZPVK/YDWC0sx/HA6Fds4%2bQsyEKXubCiSEg/iNZu9E4zV7aSKw/ftgrSUG2rnDl5oiqE3FOpaqy/cKhtFZA7VBDpjmMph8hNudSq%2bq5X7N/s64D8vl7KSDUpxgZUbOzzOsfjcE9kMW57hxJXtWnJbZVz5y49%2b/gjnFku41KJKdNm2sSYKZhrrhkADuq2ZUOhd3e1PEstmxZ5RgkxIco2AZBmmgFVBqhAFS6jkGq16fSfgaTQoSUWiZkNcnfdm3/cwv3XEJr2ReRLgi82TVMq8T89T8nhFtcvfxPGveUvpVvIredpDM0AAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"702\" alt=\"[https://travis-ci.com/Quantum-Game/quantum-tensors](https://travis-ci.com/Quantum-Game/quantum-tensors)\" data-srcset=\"/assets/static/travis_ci_checks_pull_request.15c3bad.51922b559a9ec00d06c0828b50596067.png 702w\" data-sizes=\"(max-width: 702px) 100vw, 702px\" data-src=\"/assets/static/travis_ci_checks_pull_request.15c3bad.51922b559a9ec00d06c0828b50596067.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded md-figure-image\" src=\"/assets/static/travis_ci_checks_pull_request.15c3bad.51922b559a9ec00d06c0828b50596067.png\" width=\"702\" alt=\"[https://travis-ci.com/Quantum-Game/quantum-tensors](https://travis-ci.com/Quantum-Game/quantum-tensors)\"></noscript><figcaption class=\"md-figure-caption\"><a href=\"https://travis-ci.com/Quantum-Game/quantum-tensors\">https://travis-ci.com/Quantum-Game/quantum-tensors</a></figcaption></figure></p>\n<p>Continuous integration makes it easy to check against cases when the code:</p>\n<ul>\n<li>does not work (but someone didn’t test it and pushed haphazardly),</li>\n<li>does work only locally, as it is based on local installations,</li>\n<li>does work only locally, as not all files were committed.</li>\n</ul>\n<p>Sounds too good to be easy? Well — to my surprise, I set it with a few clicks at <a href=\"https://travis-ci.com/Quantum-Game/quantum-tensors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Travis CI</a>, and by creating a <a href=\"https://github.com/Quantum-Game/quantum-tensors/blob/master/.travis.yml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">.travis.yml</a> file in the repo:</p>\n<pre><code class=\"language-{yaml}\">language: node_js\nnode_js: node\n\nbefore_script:\n  - npm install -g typescript\n  - npm install codecov -g\n\nscript:\n  - yarn lint\n  - yarn build\n  - yarn test\n  - yarn build-docs\n\nafter_success:\n  - codecov\n</code></pre>\n<p>Conversely, if the code works passes, but does not work locally, there is a fair chance that the problem is with local installation (e.g. conflicting paths) rather than the code itself.</p>\n<hr>\n<p>And the gamification part! Writing tests for all functions is boring… unless I get some score for that, as visible feedback. With <a href=\"https://codecov.io/gh/Quantum-Game/quantum-tensors/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Codecov</a> it is easy to make jest &#x26; Travis CI generate one more thing:</p>\n<p><figure class=\"md-figure-block\"><img class=\"g-image g-image--lazy g-image--loading md-figure-image\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 967 400' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-2d208a0971a3862237b693b485e6a988'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-2d208a0971a3862237b693b485e6a988)' width='967' height='400' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAaCAIAAACIHs0YAAAACXBIWXMAAAsSAAALEgHS3X78AAAFKklEQVRYw9VXaXPTSBDN//9XW3ygKBJIIHHAEN/WZVmy5j6lfZqRhQkpdj9EtayqM34eTzTdPX28ueq6rm3bOAbQ/i%2beUe0rfDjnpJTGGBceG0Y/wXP52he3%2bMcFcR6qCiHigiv8wY7Hx8ciz5h025KPxv2BT1SsKIo3b94A9wbgw1o43Yexd38EUzzxxdGLAfuLH8fJfkXE3o1e9xcvsZfgCgYJIU8N4UIqZZQ2Umk1jWAjCDaSUgmhsB8E2%2bJrgDrooGUYsZIywYXg%2bMOa80sGEPQcDGBcfPr86WE2U8bpXqwewGuKVMa33eOXr9fXH7CpUrZkdcUbo53U3qhCGyVU2DrNtNRQY7PZfrp/uH%2bYvb%2b%2bqQm33mvrBjFO6XACCCGsNVBah09j9GSiNDyncQARY38AOBIbB6%2bZ3vPGGhvncRJcYpCcMRJc3wvWwlRj%2b/WDASHs2t5060yfDvBUO4X41iNWAHACiGHoFuexJ36LOFhqwgLmdOZMbnXuTQFs%2b68Zo1tOt4I3fZIMSexcQdT2wJ4ygrER/f9PUYaQd0mWYTtgSslysYzzDSXwaMSHQ3E4VL0Cjnmdemivs7PknckW32/Wyw9PT18pFVB%2bOIH2eeGctgH9ii8nY7U0jnK9FzrlFyJMZtpSt4XrpPLSOjsYoK3nyhJhGm4wAk9RxRE25fEYOw8CHzjOoyQhCSNG0UEQ96BlB58cfVae5djmud7Ni9lTOZ9n96ncovgPIXQgqmxkeuSbgiGKipOcopUZrZI0c8EAzlmaZXGeNg3SM%2bLT6WRDOMGAMhgwStXmmVzfLt5/Xn28W9zs6Nq15yR%2bsef9VyHUj20nPD24fenSS6l8zrsT6yre1bXPjTODAUTamqriJIpGZrXIayGNC%2b96zROAa9FzhrDRaGEyYkYadT6B5ucTqJ6fwOZudf2wvrt9ut6z8wmgHtVMN1xXRCKQDo08NlJoC/X9q7ofOTAqrUNPGOM%2blk6sQc2PZSqewPHC/bAhV9uv%2bf23/HGezxKxGXLgxRCaKIr%2bZQj1VchT7nbCJZcifWq7g%2btKiPVyaGSw%2bMh0WiGDKdgoknhXsoqqV09ireRmtY5ViHG%2b2myGsKlrUKMxiXU4Dd8y6xPrMwulz9J22Xr7cT5/N/vyljEKO4cTYD2Ns0IZJg2H4Ktxr%2b5%2bqA42Fw1AoIOjxXkbSEHE8VqCJLaeKrdTLrkU7VOmNjVZnPhKGzF04hhC3rc/X80mCSHv/YuTz6ZhgPK0cXvi0sYloxCXVGYLUOktc0fw7SGE8kZtS/aUkmVgE8Boba9OKMBzFstl7FOU0sVqPYRNdcRpDOFEGlCyvky1rPEJ8Vnj01Fol33Z3c5WN%2b/u/8rJrhtDCLyod8TgDN/TpOn7wG8u4NBMelq5fe3S2iWjnHobClhFurxxxXM2itLZXwmC7ye5EHoPx0czQOyAzx1aOztUQtDVmCS/dmLIwexXp2%2bbZrmuvhV6b0cqUTR9F%2bvjp2ToAxMZgNK/WCxjyjHGFmc2Sk41LmUR18cq9oRfuRAaWSrW7%2bdvP36/vp6/25Cl/0OpRBeTmJzc7jKDQxKnsishujtyX/9go0K7humSqBNVR6rASd0EbA65lu4TRlkfNtbsdvtIQtF9ccsaiB2jTVjgOmq6vWnTS7FdmhT3aXG/3n0QsvnRB9DIwIV2Rw4WBC5UEWX96xtge6V3hPShj26VpqkJenNGRwMIaU6E9Aa0VLd73aa6TUaxXZZXj9vkbp3cMlHDgL8BqRsMXFx6KxAAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"967\" alt=\"[https://codecov.io/gh/Quantum-Game/quantum-tensors/](https://codecov.io/gh/Quantum-Game/quantum-tensors/)\" data-srcset=\"/assets/static/codecov.82a2fbd.feac2613efaad30bfae150edfecf9f24.png 480w, /assets/static/codecov.41e7f26.feac2613efaad30bfae150edfecf9f24.png 967w\" data-sizes=\"(max-width: 967px) 100vw, 967px\" data-src=\"/assets/static/codecov.41e7f26.feac2613efaad30bfae150edfecf9f24.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded md-figure-image\" src=\"/assets/static/codecov.41e7f26.feac2613efaad30bfae150edfecf9f24.png\" width=\"967\" alt=\"[https://codecov.io/gh/Quantum-Game/quantum-tensors/](https://codecov.io/gh/Quantum-Game/quantum-tensors/)\"></noscript><figcaption class=\"md-figure-caption\"><a href=\"https://codecov.io/gh/Quantum-Game/quantum-tensors/\">https://codecov.io/gh/Quantum-Game/quantum-tensors/</a></figcaption></figure></p>\n<h3 id=\"further-reading-4\"><a href=\"#further-reading-4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Further reading:</h3>\n<ul>\n<li><a href=\"https://www.eficode.com/blog/github-actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A first impression of GitHub Actions CI/CD</a></li>\n<li><a href=\"https://bravelab.io/blog/migrating-from-travisci-to-github-actions-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Migrating from TravisCI to Github Actions</a></li>\n</ul>\n<h1 id=\"ending-notes\"><a href=\"#ending-notes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ending notes</h1>\n<p>Sure, all of it is fun. But: did it help me? For example: believe me or not, but I refactored a piece of tensors numerics in one go, with no errors:</p>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 948 369' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-7c1d2d8db0bc92f3b378aae339beb357'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-7c1d2d8db0bc92f3b378aae339beb357)' width='948' height='369' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAIAAAAOir%2b2AAAACXBIWXMAAAsSAAALEgHS3X78AAAIx0lEQVRYw71X6XrbxhXVQ1QSxQXAYPZ9sBAkRUmkGMtO2uRLX812f%2bVpewagGW9xPzdN57uCBsDM8C7nnntx9fzDIXWhG1I3NN26addN0yVcu03b9ClipNg0SUjx22%2b//frPX20wMQTv/O/DfSQ%2bjDKN8Kn4866PFv/5cdUMDXVUNYo7KgIVvsZExjxXidayqlhZS3J9c/327dvj8%2bFuNatFRXhV0RJS462oyrrAk5IWBVmtylVJCsLKosoTyPQEtzgKK7EekzyvisV8kcfl%2bqUsFstvjqvu/oG5YJogvRCwwTEIU3XNaybqqq4KaEWq29vb9%2b/fn55Py2qukuSGysA1AuOZilxil2XSczyUjgtLuc1HccOYpliD9VxT2yusUYFji058%2biFCKyrqmhEIbqkkVOLXCQSTilTlN8dV7HermlFe1LyqGc7CNkLq8WU1Cilxys3NDQx4fn5eFHOYip%2bkqoZ%2bKgioDuWgKOzhuoZa0JjpWo%2bGYZlKnOXF2ebplfB5jYzZYGwxjcguY1XWe7SkqsuaVrXIehTfHFfbhwdhjHSWSlFrQSUnktUKx%2bRTKmhfl4jAzfXZgGU5F5pwTXRk0hHhSC0KKksZKDSGJdkAOLjJwRFjHLLLoW6OLWCZ4wObx4jlBdmSwLhlRQngjapzMkWmAiollChXqz82YLPdcMGZdjWXZZ2VzVoTYLYssG0UBAIReJcNOC6qUqZexChjcMPaDpuw27v1ILwFMLKucKqhI05ycKA09DOtyOBJE3jEFAq8xa1thRrhBNRNC0wrVRLZHYaaXqjAvhGHqwTi6R0IBwas8liulsv8f1R%2bGmX1AULHw5Ipvf%2bFp0cet7br3Gbwu61pWxWdbvOPSf%2bJZGNiVh36jciuJnzDwYAKHZ8At0jo8dUoiAMBPVTnaOgchD80oG3X0aiUvDZWUBwnqbSMEE5KpFA1mlGNBrx7lyMwLwuAveKqoqwiK0JXZbUoymUFeuFkgtyEgRxIWo05SkZwZz6Af86yKlaXscy%2bGifnBUV%2bOz05v/1DA/rNniKYihnFpfXMILpSGcOkUhZwVqAqmH99fQ0DTickcUFtS6QlEqirR%2bqgVNLMWprCo8AxNEbeA76QkVg%2bUM1oIbBZXBz62fzLJx/ffh1C/ZpA34Qwa66VMEgxJayXWhEulBa4Y9reLeaA0PF4uEOKmK7gtmQWqUJ4QUVJGPIvT7KzaUlZSWpkdvY9V4ShbrCSKsAGWB5dXqyK/9G4atZrkVq32Qrn2t67NgmPfABNMhQCWtdUCK4sCgoK2ZsfX1tTJ8eDFc4wrzgSjdkoXBS4mkDqulCydIZoiwpXlPWK8UJLKmQFIGtRavA8RQEc4bGALBeLFQSBnt8tF/PiO20DhLZ%2bvdXNYGNqhq2OLbdRxYYK0LXKZnDJlZkM%2bOmn1z6a9f227dp%2bv7t/emjuT83px%2bb4Jh7euO2hZjzs1%2b3zzg/9sO37LqRtivvO9oOJvX06mP1ehSRy5tYqtsIFGRJ3XhivmrVKfQUCXH2HDVfDsB4e9rrbwplUa6I0NZ5ykWM90REya8wBQOhwONysKO9PpQjND//oX35uX35uDi869e1ut3vcNo17euhPT%2bvtJu2Pj4eX0%2bH1q/vjKe2fTbdrnt4Mr35uj2/C/SHsHvtXv3Sv/m66rQyNtNFtHlTsKoDvuwxIKfH2fnN6aR6Oul/brlEhSt8wpS4HnVkotxLPs8WKajRM6DvgNid9wpVUlTW8bSwMiNGGYJxH59CgYnDfidgjpMgXONj0G2iMgOMngDpsx/lATsbSBKHVd0KoSQ3lRjuUoYZDISk4l6hrlPPLoqr6vZWYzVe18ivCuW%2b4TaAjqm0BQq3qu9vZ3SzLfDZb3N2toNYHGcGdFV3O55drzoHFYmQbUFMexX9qHL5iQAgxWNP3PXORGFVQBuIA7UglUKEnd3xswN2yVGkd%2b353fNqfjo8/HIfHfd8H33bCN7rpTTMgkcBjFfioKC5dV3Gef96c/VkWQkstrTUpEc2ZA%2bEwYtBT0EuZASugDt7kOvDudDohGbwTx6d%2bfb/Z7PquC7vWRiu01SpDpdPtBimB1ESl%2b148/DcG4JtlWZSqbeP%2b3g9N3O2artMxwVXIJ9QjDBDf7d0st9On59vbmdZy2O/Cwwt3bW1jdJ7pWDE5n90uLnI3A0KKv35c4ZMLHx2x62y3Ey5xYw160txQGK7hWMU4Oq20rKp/TTkwm8GrZv3YPb9GumNihsf1w8Puae%2bTB4qQSMJHEAtT9v9hAFgIOFG%2bsesnk8khcpecN4yzJZJsHKDU6%2bu/Ta3E7HZmkekodsoRypYFQV/kNPcWbK6Z8aB2CDdo5Qz2Il1RqiDn5mY5NouL5XlyfgkOytdc1JZjUcspvrxMct4vFmPp%2b33BpB4ikInMmwAEu2HbbndQAjWhpvQzFhpz4Pn2ZtZFZGxoojHOcRtgRoE/E6jUuGUKnzmGWw8bjNUpaB3glHhu64QhShJvQBjEoeYYb/VEu8EpBcvHE2RomZRMOUQSVRyVHlUPSIbjQA/o0GTonDGUsQwhdFgeNwbHSZxUM3apX18YcLq5vSnr0jq5WfuED9HQoV%2bDciOvA0IAocevIghwBNRaN9rEqFKXWyKuat0Qo%2bvooD2JlnufgkP1SMmhjJjYgOJQHGy/y42ZT6bdoM5kYmg6MLvO1brD4ai8oB%2bWDUjJ5BbOowHPLpSCMb76lD0uNHp8Pq7mRRCeVwLlILdvSlRGUmPhM/QIGTnaou1B/qA1QFdCbcKxOaGnXnkEQG5%2bFiOQxq/2LPPFBKEPRW1EznmyONeNDKFxshir3gSh9brzweUCfi4mXyHmSwRenV6RRQ0vWZY/upAGdYAYHqLt96YbEGiF9BVCuuiGPRyWKdUntLAfOuTyM/mkJnz08MuVH2%2b/qHo1tAO6ToSVWYBYITqAWvG1CLx99%2b7l9IIkHr03%2bXJsJMfEWs5nUy9wcRWYNHsuO%2b8v5NN/Awxb0YeAvQ47AAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"948\" data-srcset=\"/assets/static/typescript_quantum_tensors_refactoring.82a2fbd.f9ab468032b77cb29a327f5be645a200.png 480w, /assets/static/typescript_quantum_tensors_refactoring.2efe390.f9ab468032b77cb29a327f5be645a200.png 948w\" data-sizes=\"(max-width: 948px) 100vw, 948px\" data-src=\"/assets/static/typescript_quantum_tensors_refactoring.2efe390.f9ab468032b77cb29a327f5be645a200.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/typescript_quantum_tensors_refactoring.2efe390.f9ab468032b77cb29a327f5be645a200.png\" width=\"948\"></noscript>\n<p>Thanks to types, and TSDocs, it was possible to see slips while writing.\nThanks to tests, once rewritten, I was reassured it does the same thing.</p>\n<p>I don’t believe I would manage to do the same things without types and tests.</p>\n<h4 id=\"takeaways\"><a href=\"#takeaways\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Takeaways</h4>\n<p>A few takeaways:</p>\n<ul>\n<li>Types and tests save you from stupid mistakes, and are gifts for your future self!</li>\n<li>Use ESLint and configure it to be your strict, but fair, friend.</li>\n<li>Think of tests as a permanent console.</li>\n<li>Types: It is not only about checks. It is also about code readability.</li>\n<li>Testing with each commit makes fewer surprises when merging Pull Requests.</li>\n</ul>\n<p>Does it slow down development?</p>\n<p>Well, my rule-of-thumb is: <strong><em>would I use it during a hackathon?</em></strong></p>\n<p>In fact, I learned TypeScript during a hackathon! For other parts: I would use ESLint in full strength, tests for some (especially end-to-end, to make sure a commit does not make project crash), and add continuous integration.</p>\n<h4 id=\"thanks\"><a href=\"#thanks\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thanks</h4>\n<p>I hope you’ve learned something — tools, or an overall approach that can be applied to any language. I would like to thank Rafał Jakubanis, Anna Karpiuk, Philippe Cochin, Marek Cichy and Klem Jankiewicz for valuable remarks on the draft.</p>\n","date":"2 March 2020","timeToRead":10,"image":{"type":"image","mimeType":"image/png","src":"/assets/static/jest_test_repl.3eb0641.e79ae289ccf400674b59dfc414980bd3.png","size":{"width":581,"height":343},"sizes":"(max-width: 581px) 100vw, 581px","srcset":["/assets/static/jest_test_repl.3eb0641.e79ae289ccf400674b59dfc414980bd3.png 581w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 581 343' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-01dbfe8766b291497c549b9aa0303f22'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-01dbfe8766b291497c549b9aa0303f22)' width='581' height='343' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAmCAIAAAD7pgrOAAAACXBIWXMAAAsSAAALEgHS3X78AAAKw0lEQVRYw9VYWXciNxbuX5Exte/7XgUUBRQYMGA2Y%2bPd7aXb6U5mHpL//zafSoa4257unDNOTlrWKV9dXQnd/UrveJ63bMtxXNdxDV3VddPxxMFANU3dD0JT13TTisLA9VzbcX3PAcKyLEmSsFAUReGbTfzm8E3aO5ZlG3nz8HA2GY/zeuK5oR9KR8dqFLn9wcGwV/ZHk8Xh4WQ8HA7H0/Gg3crDKLTBhKkzLMMLPN2If/pPAH4LcHzVng25Hd1bMUC25niGYQSRNPwcy%2bGnFFEQOYAcp0oKCGRNR%2bcJMStKkmpaILY0S5YksoMgGKoMAEs1WaKSViTJ1lUMpWpbRZZ0WTJV5e0ZgG5xUNcLbNPgiZDYIuw8Tj7dlBer1nLWmLqGH/UmnfVt8/A0X1yWx1fd4/eqYU2y8UE6uB1%2bGMRdCMFUVVvXeom/bKfjLBgk3rAezZrxLI%2bHWXhWNqZ57Orq2yrh3RbgJUlGowNN0SBdS7MVSdHxJ8mapsmqrsiKohuybui6IYpEtLqiWJqpKyrkrkiiqkiAoA0MVeyILwFFTZHJYvntveCJAWjAJn5sE/lzbO63b4d3m9bRYX2K7mg2DMRQ5F4S7Kf%2brBHOmtG8FX%2betD%2bO28fdrIz9VTs96TUh%2bF7sKcTFBdqpvCvFVpD41zBAbFRRICw60hQ9tKLEiiFdVYZMZfy8oUIXMozENzUw4xqaZ0BRimNomILUAeiVpN/cU/%2bUBgzTggoAEFcWeJZnWCjjKZAIMBeu8m%2bOunYlUYbjWDLk%2be2Q%2bD8vfDe8/iUakIkGZKpnluFqe8xejanVWBoJf/ppDzMwZ56EGnLWGj24INAgI1QACUgcQyIVuBDEv1UDtuMhTwFgWX6x7K1PhoNBPhw0Dsbdk81gszkYl2Ls2KMsGOdJL3YHSTDJ434Cg9JEScjMRsfqSHD6qC1afqIlgWaDFfFv04CqabquUoNJ06DRjLIsQMoyDC2KnDyPmjEDGSM5B5bu6lrqmpFtWopkWqBRfTWsG3WEJtlweUUL1MBRDJbn/iYNPAUK7sn5ajVmb6%2bGb41hPc/3Pd%2byHMN0DEOndk%2btiGGJM9AkXP1jSZjhYT/EF0ho3noDsSfShGdd3NUX4hPBl3WH%2bPzfn2Ngm/WJy6IxlRknab1o5a1mo1P2wzj8CW5Bjk4YqGwPzAiA9xi2cnGuxvGgQGc4Hkim4hbDfzHsFs9RgKtEBgALqTjYbfxC9GBY4lo8y5DkT%2bDv%2bYCJ6sY0aBRCSGV5YaTIqNryIiq6uemnvqE2AqcInW7i92OvFbqmpsLETE1p%2bA4ScGhqvmW2fLsdOv00aAcW8kNi64i8ndgbZ2EOssgtE7%2bIvSJwEIsT1wYmdazMtbBDK7ARjhlOSCOu32QRVFQvE1QnjRlXJ1x9ywfgAbqu0RoTK8FyTxZlQYT1F2Whhw1Hk/KAHPSgHpahs58FhiQ2fdvRlVbgzFpp09VT31214nkedUKn8K1lkdQd3TP0URZu2um8lQxitxU6g3q46WTIjpkHBpzUMfchlNT3dMW2LcOys7A27jDIS6pX51WnkdU8ncR14ZmZvMwDJioEjhiGCFZISJVIoxarqqqimbwoIcqjc6RLVpCqpkNKa9DotmI4JIeIEqZkTeUlFHa2pdoiCb4iC3MkU8TPYXUkaisKyhGeLIfHYCFmUPpJVUqVZfIP1QkvkyJHURUyRXSiqruS5wsGHNLsyoQE07R8HyEoCsMoCEJ0k6Q5nza4NfBRnCRpA1Ou62EYx4nnBUABtm0nQYuTOESP6RJs6HleHMe4eGRZBoxp2liFYT2rp9VCbIV9LcvGT%2bOL7vkBuau4WJimaYZNgIR8XwujqrY1IcEwzMViuVyuVqujy8urdruDZbPZ/Pz84uHhw2azmU4P1%2bvj%2bXy%2b2ZyCbLk8AuXJyeb29hZked7C7KdPnzEEHjS3VcN2uHiA7P7%2boSxLnB77QAR3d/cXF5dXV9fHxydYjoPOZrNer499Hh4erq%2bvMQvKo6Pjs7PzomgTCxdf8wFNU6mFgQFIEV9UnQDwBUzkUckeIgEMYUAtmMXQI3HWtkk96FWixX0HEy4wfiXCMAyBpwtBg45llAybA8AUOKEEdB/A%2bFGqf7otpoIgwCxK49cTGRplwDSRXnFq/Lf0qnimzAAJRRGLJNQ6xbzsL/Ggf7mE7kw7pXlJQBfulldmYnxtQvA8XCwhqjDwAWBINYCDVn6lYA09NJUWVAyR7E5QNfP5aZ7z/I2pbyB3MIDX8Prr5TTazoRgrJeXl7DO09NT2CUMFzCcAethhTAkqqKvzvrVyV496Fv01zQAfw/8Jw3AdCDjRqNJzworhH4QYWCIO3Xv9Ish9LOzE0pAj65AbVsDsEjJZP4lDFAe5CoG0yFEd3p6hkgyHI4mk8PZbAGFIAI0mzkOMRodYAqG9P7m/YcPH2FsUM5gMETA%2be233xFJQIZweX19Mx5PTk5O9vcHj48/4wvz%2b8r034QBERWJppv9shtHwc4H6vVGt%2bwX7U7ezBHOiqKDuBYnKYQK5cCWwEC306URttPpgh7qAg0w0BU01gG2WwIJDE4PPrcu%2bPYaIDkX2F2FSCKgGxq6BqO2nIA8AqEZBlLLNggixhFxwlh2sU/dRg86pBEMX3QQ04X/f6/CtLkrKN7RNxXdsIqisHSNVtRIfdHwOpr9Gk0ek%2bFVMr5LZp%2bTxX%2bi8b2flcjP9/dIZ3DvM2Sfm/fvkeDu7u/h9HD3m5vrh/v7x48ff/nlV6Q8j/gWSer44udRmQdVOg%2bqvhsizdO63Seu%2bNRxWnri573KP18wUPkANABf3PoAfsiPm35z4KZdw4kNr6H7uRV33bTt%2bTEkmjVajWarXbRhYPVmjrIiS%2bt5q5NkjUbeaba69bxTdEqQWY7veKFmuJYbohyAYnUnsL3IcgPTDdwgMtzAQgERxX4Qu36EhGZWS0w7CKMU2ToA3vOeMwAX/YIB6gMoR2zLJLWQIChuIrl1Tg9QiJ5cb9ZX6/O7s%2bkR0vl8OPpUXH5qzK/t4iCd37XP/p3N75rrD8X5z1ajNzpend2eX95uFpvV8uJocboeHx9NN8uLu9PD949W1usUvdXBeNIbnMLB%2b8NRSYBp2TeLcWf/Jgp7%2b%2bvV%2bcP1p99vV/Pzerhvxs1OOtdl8igobtuLp0WevGrB0KtLPXknbMXpfgPybB4U7dPDg4ez%2bdVysh7vH/X7xwfnJ6cX0/3RpDecj5cLsDWaLqbL%2bXQx6ZTr8QiU57OD9Wh/PR4cj4fLQX817D9ere6uLzr19qrsXg7686LY9Mt1WR6X5fWwfwS2Ov31YLVo9xejweVicrE8OB1MJ/WynTXmzYEqyfz/uNH8oYE4QgFo0guNqigCz457ups2a3t7uFmSyyW5QVZXrtoeXz098EyNY2q4NHEVIFQvAoQYtzPcz/AltyzSa%2bRuxkhV2UsvonQvdjtEKCQb8tsdamQxiS5C9Qzyncfd6k0FNwkU4PRCAwC7t5u6HaWYFqXtfVYQd4p8BXim5VfbHwQvKJ%2bS0XP8H68yovBdBhRVj6MYPkAEIXCBnvYbqigQOQr/7LZjQEWYMwydvk4nZmPY0lEZkRfcf3bbMaBFYYCShZgQufWRG7T4IzTKAKdpRhyF9EYGjFy9if8wDFAlwN53oUr8cdo74Qdv/wX3q1Ro9lWyrgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"},"author":"Piotr Migdał","medium_url":"https://medium.com/quantum-photons/how-i-learned-to-stop-worrying-and-love-the-types-tests-b6b5ee5e8ede","extras":[]}},"context":{"path":"/blog/2020/03/types-test-typescript/"}}